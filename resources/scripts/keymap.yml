modmap:
  - name: Global
    remap:
      # swap left Super with left Alt
      LEFTMETA: LEFTALT
      LEFTALT: LEFTMETA
      # swap Capslock with right Ctrl
      CAPSLOCK: LEFTCTRL
      RIGHTCTRL: CAPSLOCK

keymap:
  - name: Emacs
    application:
      not: [emacs, Emacs, emacs.Emacs, kitty, kitty.kitty]
    exact_match: true
    remap:
      # Arrow
      up: { with_mark: up }
      down: { with_mark: down }
      left: { with_mark: left }
      right: { with_mark: right }
      C-up: { with_mark: C-up }
      C-down: { with_mark: C-down }
      C-left: { with_mark: C-left }
      C-right: { with_mark: C-right }
      C-b: { with_mark: left }
      C-f: { with_mark: right }
      C-p: { with_mark: up }
      C-n: { with_mark: down }
      # Forward/Backward word
      M-b: { with_mark: C-left }
      M-f: { with_mark: C-right }
      # Beginning/End of line
      C-a: { with_mark: home }
      C-e: { with_mark: end }
      C-shift-a: shift-home
      C-shift-e: shift-end
      # Page up/down
      M-v: { with_mark: pageup }
      C-v: { with_mark: pagedown }
      # Beginning/End of file
      M-Shift-comma: { with_mark: C-home }
      M-Shift-dot: { with_mark: C-end }
      # Newline
      C-m: enter
      C-j: enter
      C-o: [enter, left]
      # Copy
      C-w: [C-x, { set_mark: false }]
      M-w: [C-c, { set_mark: false }]
      C-y: [C-v, { set_mark: false }]
      # Delete
      C-d: [delete, { set_mark: false }]
      M-d: [C-delete, { set_mark: false }]
      # Kill line
      C-k: [Shift-end, C-x, { set_mark: false }]
      # Kill word backward
      Alt-backspace: [C-backspace, {set_mark: false}]
      # set mark next word continuously.
      C-M-space: [C-Shift-right, {set_mark: true}]
      # Undo
      C-slash: [C-z, { set_mark: false }]
      C-Shift-ro: C-z
      # Mark
      C-space: { set_mark: true }
      C-shift-2: { set_mark: true }
      # Search
      C-s: C-f
      C-r: Shift-F3
      M-Shift-5: C-h
      # Cancel
      C-g: [esc, { set_mark: false }]
      esc: [esc, { set_mark: false }]
      # C-x YYY
      C-x:
        remap:
          # C-x h (select all)
          h: [C-home, C-a, { set_mark: true }]
          # C-x C-f (open)
          C-f: C-o
          # C-x C-s (save)
          C-s: C-s
          # C-x k (kill tab)
          k: C-f4
          # C-x C-c (exit)
          C-c: C-q
          # C-x u (undo)
          u: [C-z, { set_mark: false }]

  - name: Emacs Rime
    application:
      only: [emacs, Emacs, emacs.Emacs]
    exact_match: true
    remap:
      C-backslash: Super-backslash

  - name: Apple keymap
    application:
      not: [emacs, Emacs, emacs.Emacs, kitty, kitty.kitty]
    exact_match: true
    remap:
      # tab
      Super-1: M-1
      Super-2: M-2
      Super-3: M-3
      Super-4: M-4
      Super-5: M-5
      Super-6: M-6
      Super-7: M-7
      Super-8: M-8
      Super-9: M-9
      Super-w: C-w
      Super-t: C-t
      Super-n: C-n
      Super-shift-t: C-shift-t
      Super-leftbrace: M-left
      Super-rightbrace: M-right
      # command
      Super-backslash: C-backslash
      Super-minus: C-minus
      Super-equal: C-equal
      Super-r: C-f5
      Super-l: C-l
      Super-f: C-f
      Super-o: C-o
      Super-p: C-p
      Super-q: C-q
      Super-s: C-s
      Super-shift-s: C-shift-s
      # edit
      Super-a: C-a
      Super-z: [C-z, { set_mark: false }]
      Super-shift-z: [C-shift-z, { set_mark: false }]
      Super-x: [C-x, { set_mark: false }]
      Super-c: [C-c, { set_mark: false }]
      Super-v: [C-v, { set_mark: false }]
      Super-backspace: [Shift-home, backspace, { set_mark: false }]
      M-left: C-left
      M-right: C-right
