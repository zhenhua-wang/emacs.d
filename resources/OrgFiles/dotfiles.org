#+title: Dotfiles
#+author: Zhenhua Wang
#+STARTUP: overview
#+PROPERTY: header-args :mkdirp yes
-----
* XKB
** Keyboard
Keyboard identifier can be found using ~xinput list~

#+HEADER: :tangle (zw/org-babel-tangle-linux "/sudo::/etc/X11/xorg.conf.d/00-keyboard.conf")
#+begin_src conf
Section "InputClass"
    Identifier "system-keyboard"
    MatchIsKeyboard "on"
    Option "XkbLayout" "us"
    Option "XkbOptions" "caps:ctrl_modifier"
EndSection
#+end_src

** Touchpad
#+HEADER: :tangle (zw/org-babel-tangle-linux "/sudo::/etc/X11/xorg.conf.d/30-touchpad.conf")
#+begin_src conf
Section "InputClass"
    Identifier "touchpad"
    Driver "libinput"
    Option "Tapping" "on"
    Option "TappingDrag" "false"
    Option "ClickMethod" "clickfinger"
EndSection
#+end_src

* Xresources
For Xft.dpi, using integer multiples of 96 usually works best, e.g. 192 for 200% scaling.
#+HEADER: :tangle (zw/org-babel-tangle-not-exist (expand-file-name "Xresources" user-emacs-directory))
#+begin_src conf
Xft.dpi:   192
#+end_src

* EXWM
#+HEADER: :tangle (zw/org-babel-tangle-linux "/sudo::/usr/share/xsessions/EXWM.desktop")
#+begin_src conf
[Desktop Entry]
Name=EXWM
Comment=Emacs Window Manager
Exec=sh /home/zhenhua/.emacs.d/resources/exwm/start-exwm.sh
TryExec=sh
Type=Application
X-LightDM-DesktopName=exwm
DesktopNames=exwm
#+end_src

* Emacsclient
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.local/share/applications/emacs-client.desktop")
#+begin_src conf
[Desktop Entry]
Name=Emacs-Client
GenericName=Text Editor
Comment=Edit text
Exec=emacsclient -r -n --alternate-editor=emacs %F
Icon=emacs
Type=Application
Terminal=false
Categories=Development;TextEditor;
StartupNotify=true
StartupWMClass=Emacs
#+end_src

* SDDM
#+HEADER: :tangle (zw/org-babel-tangle-linux "/sudo::/etc/sddm.conf")
#+begin_src conf
[Theme]
Current=catppuccin-frappe
CursorTheme=Breeze
#+end_src

* Rprofile
#+HEADER: :tangle "~/.Rprofile"
#+begin_src conf
## don't show gui menu
options(menu.graphics=FALSE)
#+end_src

* Kitty
** Main
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/kitty/kitty.conf")
#+begin_src conf
# default conf
font_size 15.0
cursor_trail 3
cursor_trail_decay 0.1 0.4
window_margin_width 0 3
confirm_os_window_close 1
hide_window_decorations yes
linux_display_server x11
include ~/.config/kitty/font.conf
# keymap
map ctrl+shift+a no_op
map ctrl+shift+e no_op
map ctrl+shift+2 no_op
map cmd+alt+r clear_terminal reset active
map f11 toggle_fullscreen
map cmd+shift+f launch --stdin-source=@screen_scrollback --stdin-add-formatting ~/.emacs.d/resources/pager/emacs-pager.sh
map cmd+shift+t new_tab
map cmd+shift+w close_tab
map cmd+c copy_and_clear_or_interrupt
map cmd+v paste_from_clipboard
map alt+shift+, scroll_home
map alt+shift+. scroll_end
# map cmd+shift+q close_os_window
map cmd+shift+1 goto_tab 1
map cmd+shift+2 goto_tab 2
map cmd+shift+3 goto_tab 3
map cmd+shift+4 goto_tab 4
map cmd+shift+5 goto_tab 5
map cmd+shift+6 goto_tab 6
map cmd+shift+7 goto_tab 7
map cmd+shift+8 goto_tab 8
map cmd+shift+9 goto_tab 9
map cmd+shift+left previous_tab
map cmd+shift+right next_tab
# tab bar
tab_separator ""
tab_title_template "{index}: {title}"
tab_bar_edge bottom
tab_bar_style custom
tab_powerline_style slanted
tab_bar_min_tabs 1
bell_on_tab "🔔 "
tab_activity_symbol "⌛ "
active_tab_foreground   #000
active_tab_background   #eee
inactive_tab_foreground #444
inactive_tab_background #999
active_tab_font_style   bold
inactive_tab_font_style normal
#+end_src

** Light theme
#+name: kitty-light-theme
#+begin_src conf
# The basic colors
foreground                      #383a42
background                      #fafafa
selection_foreground            #383a42
selection_background            #dfdfdf

# Cursor colors
cursor                          #383a42
cursor_text_color               #fafafa

# kitty window border colors
active_border_color     #0184bc
inactive_border_color   #c6c7c7

# tab bar colors
active_tab_background     #EEEEEE
active_tab_foreground     #000000
inactive_tab_foreground   #4f4f4f
inactive_tab_background   #c6c7c7
tab_bar_background        none
tab_bar_margin_color      none

# The basic 16 colors
# black
color0 #383a42
color8 #c6c7c7

# red
color1 #e45649
color9 #e45649

# green
color2  #50a14f
color10 #50a14f

# yellow
color3  #986801
color11 #986801

# blue
color4  #4078f2
color12 #4078f2

# magenta
color5  #a626a4
color13 #b751b6

# cyan
color6  #005478
color14 #0184bc

# white
color7  #f0f0f0
color15 #383a42
#+end_src

#+begin_src conf :tangle (zw/org-babel-tangle-not-exist "~/.config/kitty/light-theme.auto.conf") :noweb yes
<<kitty-light-theme>>
#+end_src

#+begin_src conf :tangle (zw/org-babel-tangle-not-exist "~/.config/kitty/no-preference-theme.auto.conf") :noweb yes
<<kitty-light-theme>>
#+end_src

** Dark theme
#+HEADER: :tangle (zw/org-babel-tangle-not-exist "~/.config/kitty/dark-theme.auto.conf")
#+begin_src conf
background                #1d1d1d
foreground                #deddda

selection_background      #303030
selection_foreground      #c0bfbc

url_color                 #1a5fb4

wayland_titlebar_color    system
macos_titlebar_color      system

cursor                    #deddda
cursor_text_color         #1d1d1d

active_border_color       #4f4f4f
inactive_border_color     #282828
bell_border_color         #ed333b
visual_bell_color         none

active_tab_background     #242424
active_tab_foreground     #fcfcfc
inactive_tab_background   #303030
inactive_tab_foreground   #b0afac
tab_bar_background        none
tab_bar_margin_color      none

color0                    #1d1d1d
color1                    #ed333b
color2                    #57e389
color3                    #ff7800
color4                    #62a0ea
color5                    #9141ac
color6                    #5bc8af
color7                    #deddda

color8                    #9a9996
color9                    #f66151
color10                   #8ff0a4
color11                   #ffa348
color12                   #99c1f1
color13                   #dc8add
color14                   #93ddc2
color15                   #f6f5f4
#+end_src

** Font
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/kitty/font.conf")
#+begin_src conf
# https://gist.github.com/Velrok/4c5bc2a0f2125f92361319928b770c8d
# https://github.com/ryanoasis/nerd-fonts/wiki/Glyph-Sets-and-Code-Points
symbol_map U+e5fa-U+e6b5 Symbols Nerd Font Mono
# Devicons
symbol_map U+e700-U+e7c5 Symbols Nerd Font Mono
# Font Awesome
symbol_map U+f000-U+f2e0 Symbols Nerd Font Mono
# Font Awesome Extension
symbol_map U+e200-U+e2a9 Symbols Nerd Font Mono
# Material Design Icons
symbol_map U+f0001-U+f1af0 Symbols Nerd Font Mono
# Weather
symbol_map U+e300-U+e3e3 Symbols Nerd Font Mono
# Octicons
symbol_map U+f400-U+f532 Symbols Nerd Font Mono
symbol_map U+2665 Symbols Nerd Font Mono
symbol_map U+26A1 Symbols Nerd Font Mono
# Powerline Symbols
symbol_map U+e0a0-U+e0a2 Symbols Nerd Font Mono
symbol_map U+e0b0-U+e0b3 Symbols Nerd Font Mono
# Powerline Extra Symbols
symbol_map U+e0b4-U+e0c8 Symbols Nerd Font Mono
symbol_map U+e0cc-U+e0d4 Symbols Nerd Font Mono
symbol_map U+e0a3 Symbols Nerd Font Mono
symbol_map U+e0ca Symbols Nerd Font Mono
# IEC Power Symbols
symbol_map U+23fb-U+23fe Symbols Nerd Font Mono
symbol_map U+2b58 Symbols Nerd Font Mono
# Font Logos (Formerly Font Linux)
symbol_map U+f300-U+f32f Symbols Nerd Font Mono
# Pomicons
symbol_map U+e000-U+e00a Symbols Nerd Font Mono
# Codicons
symbol_map U+ea60-U+ebeb Symbols Nerd Font Mono
# Heavy Angle Brackets
symbol_map U+276c-U+2771 Symbols Nerd Font Mono
# Box Drawing
symbol_map U+2500-U+259f Symbols Nerd Font Mono
#+end_src

** Tab bar
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/kitty/tab_bar.py")
#+begin_src python
import datetime
from kitty.boss import get_boss
from kitty.fast_data_types import Screen, get_options, add_timer
from kitty.utils import color_as_int
from kitty.tab_bar import (
    DrawData,
    ExtraData,
    TabBarData,
    as_rgb,
    draw_tab_with_powerline)

opts = get_options()
REFRESH_TIME = 10
timer_id = None


def _draw_right_status(screen: Screen, is_last: bool) -> int:
    CLOCK_FG = as_rgb(color_as_int(opts.selection_foreground))
    CLOCK_BG = as_rgb(color_as_int(opts.selection_background))
    DATE_FG = as_rgb(color_as_int(opts.active_tab_foreground))
    DATE_BG = as_rgb(color_as_int(opts.active_tab_background))
    if not is_last:
        return screen.cursor.x

    cells = [
        (CLOCK_BG, screen.cursor.bg, ""),
        (CLOCK_FG, CLOCK_BG, datetime.datetime.now().strftime("  %H:%M ")),
        (DATE_FG, DATE_BG, datetime.datetime.now().strftime("  %Y/%m/%d ")),
    ]

    right_status_length = 0
    for _, _, cell in cells:
        right_status_length += len(cell)

    draw_spaces = screen.columns - screen.cursor.x - right_status_length
    if draw_spaces > 0:
        screen.draw(" " * draw_spaces)

    for fg, bg, cell in cells:
        screen.cursor.fg = fg
        screen.cursor.bg = bg
        screen.cursor.bold = True
        screen.draw(cell)
        screen.cursor.fg = 0
        screen.cursor.bg = 0
        screen.cursor.bold = False

    screen.cursor.x = max(screen.cursor.x, screen.columns - right_status_length)
    return screen.cursor.x


def _redraw_tab_bar(_):
    tm = get_boss().active_tab_manager
    if tm is not None:
        tm.mark_tab_bar_dirty()


def draw_tab(
        draw_data: DrawData,
        screen: Screen,
        tab: TabBarData,
        before: int,
        max_title_length: int,
        index: int,
        is_last: bool,
        extra_data: ExtraData,
) -> int:
    global timer_id
    if timer_id is None:
        timer_id = add_timer(_redraw_tab_bar, REFRESH_TIME, True)
        pass
    end = draw_tab_with_powerline(
        draw_data, screen, tab, before, max_title_length, index, is_last, extra_data
    )
    _draw_right_status(
        screen,
        is_last,
    )
    return end
#+end_src

* Dunst
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/dunst/dunstrc")
#+begin_src conf
[global]
# display
monitor = 0
follow = mouse
notification_limit = 0
indicate_hidden = yes
sort = yes
idle_threshold = 120
# geometry
width = 300
height = 150
origin = top-right
offset = 20x50
scale = 0
# frame
transparency = 0
separator_height = 1
padding = 8
horizontal_padding = 10
frame_width = 3
frame_color = "#8CAAEE"
separator_color= frame
corner_radius = 10
# text
font = Noto Sans Mono 13
line_height = 0
markup = full
format = "<b>%s</b>\n%b"
alignment = left
vertical_alignment = center
show_age_threshold = 60
ellipsize = middle
ignore_newline = no
stack_duplicates = true
hide_duplicate_count = false
show_indicators = yes
# icon
enable_recursive_icon_lookup = true
icon_theme = Papirus
icon_position = left
min_icon_size = 16
max_icon_size = 128
text_icon_padding = 0
# progress bar
progress_bar = true
progress_bar_height = 10
progress_bar_frame_width = 1
progress_bar_min_width = 150
progress_bar_max_width = 300
# history
sticky_history = yes
history_length = 20
# advanced
browser = /usr/bin/xdg-open
always_run_script = true
mouse_left_click = do_action
mouse_middle_click = close_all
mouse_right_click = close_current
title = Dunst
class = Dunst

[urgency_low]
background = "#303446"
foreground = "#C6D0F5"
timeout = 5

[urgency_normal]
background = "#303446"
foreground = "#C6D0F5"
timeout = 5

[urgency_critical]
background = "#303446"
foreground = "#C6D0F5"
frame_color = "#EF9F76"
timeout = 0
#+end_src

* Picom
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/picom.conf")
#+begin_src conf
# resolve screen tearing
vsync = true;
unredir-if-possible = false;
# fade
fading = true;
fade-in-step = 0.028;
fade-out-step = 0.03;
fade-exclude = ["class_g != 'Dunst'"];
# shadow
# shadow = true;
# shadow-radius = 10;
# shadow-offset-x = -10;
# shadow-offset-y = -10;
# shadow-exclude = [
#   "window_type = 'menu'",
#   "window_type = 'dropdown_menu'",
#   "window_type = 'popup_menu'",
#   "window_type = 'tooltip'",
#   "window_type = 'desktop'",
#   "window_type = 'utility'",
#   "window_type = 'notification'",
#   "class_g = 'Plank'"
# ];
#+end_src

* IBus
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/ibus/rime/ibus_rime.custom.yaml")
#+begin_src conf
patch:
  style/horizontal: true
#+end_src

* Rime
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/ibus/rime/default.custom.yaml")
#+begin_src conf
patch:
  __include: rime_ice_suggestion:/
  menu/page_size: 9
  switcher/hotkeys:
    - Control+grave
  ascii_composer:
    good_old_caps_lock: true
    switch_key:
      Shift_L: noop
      Shift_R: noop
      Control_L: noop
      Control_R: noop
      Caps_Lock: noop
      Eisu_toggle: noop
  key_binder/bindings:
    # - {accept: Control+backslash, toggle: ascii_mode, when: always}
    - {accept: minus, send: Page_Up, when: paging}
    - {accept: equal, send: Page_Down, when: has_menu}
    - {accept: comma, send: Page_Up, when: paging}
    - {accept: period, send: Page_Down, when: has_menu}
    - {accept: bracketleft, send: Page_Up, when: paging}
    - {accept: bracketright, send: Page_Down, when: has_menu}
  # resolve conflict with bracket paging
  key_binder/select_first_character:
  key_binder/select_last_character:
#+end_src

* Rofi
** Common
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/rofi/common.rasi")
#+begin_src conf
configuration {
    font: "Noto Sans Mono 12";
}

,* {
    /* Colors */
    background:     #1E2127FF;
    background-alt: #282B31FF;
    foreground:     #FFFFFFFF;
    selected:       #61AFEFFF;
    active:         #98C379FF;
    urgent:         #E06C75FF;
    /* Gradients */
    gradient-1:     linear-gradient(to right, #282c34, #4a4e69);
}
#+end_src

** Launcher
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/rofi/config.rasi")
#+begin_src conf
configuration {
  matching: "fuzzy";
  show-icons: true;
  modi: "combi,calc";
  display-combi: "";
  display-calc: "󰪚";
  combi-modi: "window,drun";
  combi-hide-mode-prefix: true;
  drun-display-format: "{name}";
  window-format: "{w} · {c} · {t}";
  kb-mode-next: "Super+space";
}

/*****----- Global Properties -----*****/
@import                          "common.rasi"

,* {
    border-colour:               var(selected);
    handle-colour:               var(selected);
    background-colour:           var(background);
    foreground-colour:           var(foreground);
    alternate-background:        var(background-alt);
    normal-background:           var(background);
    normal-foreground:           var(foreground);
    urgent-background:           var(urgent);
    urgent-foreground:           var(background);
    active-background:           var(active);
    active-foreground:           var(background);
    selected-normal-background:  var(selected);
    selected-normal-foreground:  var(background);
    selected-urgent-background:  var(active);
    selected-urgent-foreground:  var(background);
    selected-active-background:  var(urgent);
    selected-active-foreground:  var(background);
    alternate-normal-background: var(background);
    alternate-normal-foreground: var(foreground);
    alternate-urgent-background: var(urgent);
    alternate-urgent-foreground: var(background);
    alternate-active-background: var(active);
    alternate-active-foreground: var(background);
}

/*****----- Main Window -----*****/
window {
    /* properties for window widget */
    transparency:                "real";
    location:                    center;
    anchor:                      center;
    fullscreen:                  false;
    x-offset:                    0px;
    y-offset:                    0px;
    /* properties for all widgets */
    enabled:                     true;
    margin:                      0px;
    padding:                     0px;
    border:                      0px solid;
    border-radius:               0px;
    border-color:                @border-colour;
    cursor:                      "default";
    /* Backgroud Colors */
    background-color:            @background-colour;
}

/*****----- Main Box -----*****/
mainbox {
    enabled:                     true;
    spacing:                     0px;
    margin:                      0px;
    padding:                     20px;
    border:                      0px solid;
    border-radius:               0px 0px 0px 0px;
    border-color:                @border-colour;
    background-color:            transparent;
    children:                    [ "inputbar", "message", "listview" ];
}

/*****----- Inputbar -----*****/
inputbar {
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px 0px 10px 0px;
    padding:                     5px 10px;
    border:                      0px solid;
    border-radius:               10px;
    border-color:                @border-colour;
    background-color:            @alternate-background;
    text-color:                  @foreground-colour;
    children:                    [ "textbox-prompt-colon", "entry", "mode-switcher" ];
}
prompt {
    enabled:                     true;
    background-color:            inherit;
    text-color:                  inherit;
}
textbox-prompt-colon {
    enabled:                     false;
    padding:                     5px 0px;
    expand:                      false;
    str:                         "";
    background-color:            inherit;
    text-color:                  inherit;
}
entry {
    enabled:                     true;
    padding:                     5px 5px;
    background-color:            inherit;
    text-color:                  inherit;
    cursor:                      text;
    placeholder:                 "Search...";
    placeholder-color:           inherit;
}
num-filtered-rows {
    enabled:                     true;
    expand:                      false;
    background-color:            inherit;
    text-color:                  inherit;
}
textbox-num-sep {
    enabled:                     true;
    expand:                      false;
    str:                         "/";
    background-color:            inherit;
    text-color:                  inherit;
}
num-rows {
    enabled:                     true;
    expand:                      false;
    background-color:            inherit;
    text-color:                  inherit;
}
case-indicator {
    enabled:                     true;
    background-color:            inherit;
    text-color:                  inherit;
}

/*****----- Listview -----*****/
listview {
    enabled:                     true;
    columns:                     1;
    lines:                       10;
    cycle:                       true;
    dynamic:                     true;
    scrollbar:                   false;
    layout:                      vertical;
    reverse:                     false;
    fixed-height:                true;
    fixed-columns:               true;
    spacing:                     5px;
    margin:                      0px;
    padding:                     10px;
    border:                      2px 2px 2px 2px ;
    border-radius:               2px 2px 10px 10px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
    cursor:                      "default";
}
scrollbar {
    handle-width:                5px ;
    handle-color:                @handle-colour;
    border-radius:               10px;
    background-color:            @alternate-background;
}

/*****----- Elements -----*****/
element {
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px;
    padding:                     6px;
    border:                      0px solid;
    border-radius:               6px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
    cursor:                      pointer;
}
element normal.normal {
    background-color:            var(normal-background);
    text-color:                  var(normal-foreground);
}
element normal.urgent {
    background-color:            var(urgent-background);
    text-color:                  var(urgent-foreground);
}
element normal.active {
    background-color:            var(active-background);
    text-color:                  var(active-foreground);
}
element selected.normal {
    background-color:            var(selected-normal-background);
    text-color:                  var(selected-normal-foreground);
}
element selected.urgent {
    background-color:            var(selected-urgent-background);
    text-color:                  var(selected-urgent-foreground);
}
element selected.active {
    background-color:            var(selected-active-background);
    text-color:                  var(selected-active-foreground);
}
element alternate.normal {
    background-color:            var(alternate-normal-background);
    text-color:                  var(alternate-normal-foreground);
}
element alternate.urgent {
    background-color:            var(alternate-urgent-background);
    text-color:                  var(alternate-urgent-foreground);
}
element alternate.active {
    background-color:            var(alternate-active-background);
    text-color:                  var(alternate-active-foreground);
}
element-icon {
    background-color:            transparent;
    text-color:                  inherit;
    cursor:                      inherit;
}
element-text {
    background-color:            transparent;
    text-color:                  inherit;
    highlight:                   inherit;
    cursor:                      inherit;
    vertical-align:              0.5;
    horizontal-align:            0.0;
}

/*****----- Mode Switcher -----*****/
mode-switcher{
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px;
    padding:                     0px;
    border:                      0px solid;
    border-radius:               0px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
}
button {
    padding:                     5px 10px;
    border:                      0px solid;
    border-radius:               10px;
    border-color:                @border-colour;
    background-color:            @alternate-background;
    text-color:                  inherit;
    cursor:                      pointer;
}
button selected {
    background-color:            var(selected-normal-background);
    text-color:                  var(selected-normal-foreground);
}

/*****----- Message -----*****/
message {
    enabled:                     true;
    margin:                      0px 0px 10px 0px;
    padding:                     0px;
    border:                      0px solid;
    border-radius:               0px 0px 0px 0px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
}
textbox {
    padding:                     10px;
    border:                      0px solid;
    border-radius:               10px;
    border-color:                @border-colour;
    background-color:            @alternate-background;
    text-color:                  @foreground-colour;
    vertical-align:              0.5;
    horizontal-align:            0.0;
    highlight:                   none;
    placeholder-color:           @foreground-colour;
    blink:                       true;
    markup:                      true;
}
error-message {
    padding:                     10px;
    border:                      2px solid;
    border-radius:               10px;
    border-color:                @border-colour;
    background-color:            @background-colour;
    text-color:                  @foreground-colour;
}
#+end_src

** Powermenu
*** Shell
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/rofi/powermenu.sh")
#+HEADER: :shebang "#!/bin/bash"
#+begin_src sh
# Current Theme
dir="$HOME/.config/rofi"
theme='powermenu'

# CMDs
uptime="`uptime -p | sed -e 's/up //g'`"
host=`hostname`

# Options
shutdown='󰐥'
reboot='󰑙'
lock=''
suspend=''
logout='󰍃'

# Rofi CMD
rofi_cmd() {
    rofi -dmenu \
	 -p "Later ${USER}" \
	 -mesg "Uptime: $uptime" \
	 -theme ${dir}/${theme}.rasi
}

# Pass variables to rofi dmenu
run_rofi() {
    echo -e "$lock\n$suspend\n$logout\n$reboot\n$shutdown" | rofi_cmd
}

# Execute Command
run_cmd() {
    if [[ $1 == '--shutdown' ]]; then
        emacsclient -e "(recentf-save-list)"
        emacsclient -e "(save-some-buffers)"
	systemctl poweroff
    elif [[ $1 == '--reboot' ]]; then
        emacsclient -e "(recentf-save-list)"
        emacsclient -e "(save-some-buffers)"
	systemctl reboot
    elif [[ $1 == '--suspend' ]]; then
	mpc -q pause
	amixer set Master mute
	systemctl suspend
    elif [[ $1 == '--logout' ]]; then
        emacsclient -e "(recentf-save-list)"
        emacsclient -e "(save-some-buffers)"
	killall emacs
    fi
}

# Actions
chosen="$(run_rofi)"
case ${chosen} in
    $shutdown)
	run_cmd --shutdown
        ;;
    $reboot)
	run_cmd --reboot
        ;;
    $lock)
	if [[ -x '/usr/bin/betterlockscreen' ]]; then
	    betterlockscreen -l
	elif [[ -x '/usr/bin/i3lock' ]]; then
	    i3lock
	fi
        ;;
    $suspend)
	run_cmd --suspend
        ;;
    $logout)
	run_cmd --logout
        ;;
esac
#+end_src

*** Style
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/rofi/powermenu.rasi")
#+begin_src conf
/*****----- Global Properties -----*****/
@import                          "common.rasi"

/*****----- Configuration -----*****/
configuration {
    show-icons:                 false;
}

/*****----- Global Properties -----*****/
,* {
    /* Resolution : 1920x1080 */
    mainbox-spacing:             50px;
    mainbox-margin:              50px;
    message-margin:              0px 300px;
    message-padding:             12px;
    message-border-radius:       12px;
    listview-spacing:            25px;
    element-padding:             35px 0px;
    element-border-radius:       60px;

    prompt-font:                 "Symbols Nerd Font Bold Italic 48";
    textbox-font:                "Symbols Nerd Font 20";
    element-text-font:           "Symbols Nerd Font 48";

    background-window:           black/40%;
    background-normal:           white/5%;
    background-selected:         white/15%;
    foreground-normal:           white;
    foreground-selected:         white;
}

/*****----- Main Window -----*****/
window {
    transparency:                "real";
    location:                    center;
    anchor:                      center;
    fullscreen:                  false;
    width:                       1300px;
    border-radius:               0px;
    cursor:                      "default";
    background-color:            var(background-window);
}

/*****----- Main Box -----*****/
mainbox {
    enabled:                     true;
    spacing:                     var(mainbox-spacing);
    margin:                      var(mainbox-margin);
    background-color:            transparent;
    children:                    [ "dummy", "inputbar", "listview", "message", "dummy" ];
}

/*****----- Inputbar -----*****/
inputbar {
    enabled:                     true;
    background-color:            transparent;
    children:                    [ "dummy", "prompt", "dummy"];
}

dummy {
    background-color:            transparent;
}

prompt {
    enabled:                     true;
    font:                        var(prompt-font);
    background-color:            transparent;
    text-color:                  var(foreground-normal);
}

/*****----- Message -----*****/
message {
    enabled:                     true;
    margin:                      var(message-margin);
    padding:                     var(message-padding);
    border-radius:               var(message-border-radius);
    background-color:            var(background-normal);
    text-color:                  var(foreground-normal);
}
textbox {
    font:                        var(textbox-font);
    background-color:            transparent;
    text-color:                  inherit;
    vertical-align:              0.5;
    horizontal-align:            0.5;
}

/*****----- Listview -----*****/
listview {
    enabled:                     true;
    expand:                      false;
    columns:                     5;
    lines:                       1;
    cycle:                       true;
    dynamic:                     true;
    scrollbar:                   false;
    layout:                      vertical;
    reverse:                     false;
    fixed-height:                true;
    fixed-columns:               true;
    spacing:                     var(listview-spacing);
    background-color:            transparent;
    cursor:                      "default";
}

/*****----- Elements -----*****/
element {
    enabled:                     true;
    padding:                     var(element-padding);
    border-radius:               var(element-border-radius);
    background-color:            var(background-normal);
    text-color:                  var(foreground-normal);
    cursor:                      pointer;
}
element-text {
    font:                        var(element-text-font);
    background-color:            transparent;
    text-color:                  inherit;
    cursor:                      inherit;
    vertical-align:              0.5;
    horizontal-align:            0.5;
}
element selected.normal {
    background-color:            var(background-selected);
    text-color:                  var(foreground-selected);
}
#+end_src

* GTK3
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/gtk-3.0/settings.ini")
#+begin_src conf
[Settings]
gtk-theme-name=Materia-dark
gtk-icon-theme-name=Adwaita
gtk-font-name=Cantarell 11
gtk-cursor-theme-name=Adwaita
gtk-cursor-theme-size=0
gtk-toolbar-style=GTK_TOOLBAR_BOTH
gtk-toolbar-icon-size=GTK_ICON_SIZE_LARGE_TOOLBAR
gtk-button-images=1
gtk-menu-images=1
gtk-enable-event-sounds=1
gtk-enable-input-feedback-sounds=1
gtk-xft-antialias=1
gtk-xft-hinting=1
gtk-xft-hintstyle=hintfull
#+end_src

* Polybar
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/polybar/config.ini")
#+begin_src conf
[settings]
screenchange-reload = true
pseudo-transparency = true

[colors]
background = #282A2E
background-alt = #373B41
foreground = #C5C8C6
primary = #F0C674
green = #8ABEB7
red = #A54242

[bar/panel]
width = 100%
height = 20pt
line-size = 3pt
radius = 0
border-size = 0pt
# need to set pseudo-transparency = true
border-color = #00000000
dpi = ${xrdb:Xft.dpi}
cursor-click = pointer
cursor-scroll = ns-resize
enable-ipc = true
font-0 = monospace;2
font-1 = monospace:weight=bold;2
font-2 = Symbols Nerd Font Mono;2
font-3 = NotoEmoji:scale=10;2
font-4 = NotoSansMonoCJKsc;2
background = ${colors.background}
foreground = ${colors.foreground}
padding-left = 0
padding-right = 1
separator = " "

modules-left = exwm-workspace emacs-buffer-name
modules-right = powermenu wireless-network temperature date battery

[module/exwm-workspace]
type = custom/ipc
hook-0 = emacsclient -e "exwm-workspace-current-index" | awk '{print " "$1" "}'
initial = 1
format-background = ${colors.background-alt}
format = "<output>"
format-font = 2

[module/emacs-buffer-name]
type = custom/ipc
hook-0 = emacsclient -e "(zw/exwm-polybar-buffer-name)" | tr -d '"'
initial = 1
format = "<output>"

[module/date]
type = internal/date
interval = 1
date = %b %d %a %H:%M:%S
label = %date%

[module/battery]
type = internal/battery
battery = ${env:EXWM_BAR_BATTERY}
adapter = ${env:EXWM_BAR_ADAPTER}
full-at = 100
low-at = 30
# full
label-full = "100%"
label-full-font = 2
format-full = <label-full>
# low
label-low = " %percentage_raw%%"
label-low-font = 2
label-low-foreground = ${colors.red}
format-low = <label-low>
# discharging
label-discharging = " %percentage_raw%%"
label-discharging-font = 2
format-discharging = <label-discharging>
# charging
label-charging = "+%percentage_raw%%"
label-charging-font = 2
label-charging-foreground = ${colors.green}
format-charging = <label-charging>

[module/temperature]
type = internal/temperature
interval = 1
thermal-zone = ${env:EXWM_BAR_TEMP}
label = "%temperature-c%"

[module/wireless-network]
type = internal/network
interface-type = wireless
label-connected = "%netspeed%"
format-connected = <label-connected>

[module/powermenu]
type = custom/text
content = ""
click-left = ~/.config/rofi/powermenu.sh
#+end_src

* Xremap
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/systemd/user/xremap.service")
#+begin_src conf
[Unit]
Description=xremap

[Service]
Restart=always
ExecStart=xremap %h/.emacs.d/resources/scripts/keymap.yml --watch=device
#+end_src

#+HEADER: :tangle (zw/org-babel-tangle-linux "/sudo::/etc/modules-load.d/uinput.conf")
#+begin_src conf
uinput
#+end_src

* Gnome
** Auto start
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/autostart/xremap.desktop")
#+begin_src conf
[Desktop Entry]
Name=Xremap
Type=Application
#Exec=systemctl --user start xremap
Exec=/usr/bin/sh .emacs.d/resources/scripts/zw-gnome-autostart.sh
Terminal=false
#+end_src

** Run or raise
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/run-or-raise/shortcuts.conf")
#+begin_src conf
<Ctrl><Super>e,emacs,Emacs,
<Ctrl><Super>k,kitty,kitty,
<Ctrl><Super>f,org.mozilla.firefox,firefox,
<Ctrl><Super>n,nautilus,org.gnome.Nautilus,
#+end_src

* Local variables
Add the following expressions to ~safe-local-eval-forms~.
# local variables:
# eval: (defun zw/org-babel-tangle-linux (path) (if (eq system-type 'gnu/linux) path "no"))
# eval: (defun zw/org-babel-tangle-not-exist (path) (if (file-exists-p path) "no" path))
# end:
