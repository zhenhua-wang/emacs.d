#+title: System Configuration
#+author: Zhenhua Wang
# #+auto_tangle: t

* MacOS
** Homebrew

#+begin_src shell
brew tap d12frosted/emacs-plus
brew install emacs-plus@29 --with-imagemagick --with-modern-sjrmanning-icon
#+end_src

* Arch Linux
** Gnome
*** Settings
- theme: Orchis
- Cursor: Oreo blue

*** Shell Extension
- Dash to dock for COSMIC
- Unite
- Vitals

** Applications
*** Emacs
#+begin_src shell
git clone git://git.sv.gnu.org/emacs.git
cd emacs
./autogen.sh
./configure --with-dbus \
            --with-jpeg \
            --with-tiff \
            --with-gif \
            --with-png \
            --with-rsvg \
            --with-xwidgets \
            --with-xml2 \
            # --with-native-compilation \
            --with-pgtk
make -j8
sudo make install
#+end_src

*** Latex
#+begin_src shell
yay -S pandoc
yay -S texlive-core
yay -S texlive-latexextra
#+end_src

** System Settings
*** Hibernation
#+begin_src shell
# create swapfile (12G)
dd if=/dev/zero of=/swapfile bs=1M count=12288 status=progress
chmod 0600 /swapfile
mkswap -U clear /swapfile
swapon /swapfile
## edit the fstab (/etc/fstab) configuration to add an entry for the swap file:
/swapfile none swap defaults 0 0
# use hibernator to add resume to kernel parameters
git clone https://github.com/Chrysostomus/hibernator.git
cd hibernator
sudo chmod +x hibernator
./hibernator
# update grub
yay -S update-grub
sudo update-grub
# enable suspend-then-hibernate
## edit /etc/systemd/logind.conf to add the following
HandleLidSwitch=suspend-then-hibernate
## edit HibernateDelaySec in /etc/systemd/sleep.conf
HibernateDelaySec=20min
## restart service
sudo systemctl restart systemd-logind.service
#+end_src

* EXWM
** System setting
*** Xdefaults
color them can be generated by [[http://ciembor.github.io/4bit/#][4bit]]. For terminal, I am using =urxvt=. Note: Keyboard selection is not working properly.
#+begin_src conf :tangle ~/.Xdefaults
! --- ~/.Xresources ------------------------------------------------------------
! ------------------------------------------------------------------------------
! --- generated with 4bit Terminal Color Scheme Designer -----------------------
! ------------------------------------------------------------------------------
! --- http://ciembor.github.com/4bit -------------------------------------------
! ------------------------------------------------------------------------------

! --- special colors ---

,*background: #0d1926
,*foreground: #d9e6f2

! --- standard colors ---

! black
,*color0: #000000

! bright_black
,*color8: #262626

! red
,*color1: #c07273

! bright_red
,*color9: #e0b8b9

! green
,*color2: #73c072

! bright_green
,*color10: #b9e0b8

! yellow
,*color3: #c0bf72

! bright_yellow
,*color11: #e0dfb8

! blue
,*color4: #7273c0

! bright_blue
,*color12: #b8b9e0

! magenta
,*color5: #bf72c0

! bright_magenta
,*color13: #dfb8e0

! cyan
,*color6: #72c0bf

! bright_cyan
,*color14: #b8e0df

! white
,*color7: #d9d9d9

! bright_white
,*color15: #ffffff


! ------------------------------------------------------------------------------
! --- end of terminal colors section -------------------------------------------
! ------------------------------------------------------------------------------


URxvt.termName: rxvt
URxvt.transparent: true
URxvt.inheritPixmap: False
URxvt.scrollBar: false
URxvt.saveLines: 500
URxvt.urlLauncher:      qutebrowser
URxvt.cursorBlink: true
URxvt.fading: 25%
urxvt.font:             xft:JetBrainsMono Nerd Font:pixelsize=30
urxvt.boldFont:         xft:JetBrainsMono Nerd Font:bold:pixelsize=30
URxvt*background:      #303030
urxvt.depth: 32
urxvt.background: rgba:0000/0000/0000/bbbb
URxvt.foreground: grey80
URxvt.tintColor: #262626
URxvt.borderColor: #888888

! keybindings
URxvt.keysym.M-w: eval:selection_to_clipboard
URxvt.keysym.C-y: eval:paste_clipboard
URxvt.keysym.Control-Left:        \033[1;5D
URxvt.keysym.Shift-Control-Left:  \033[1;6D
URxvt.keysym.Control-Right:       \033[1;5C
URxvt.keysym.Shift-Control-Right: \033[1;6C
URxvt.keysym.Control-Up:          \033[1;5A
URxvt.keysym.Shift-Control-Up:    \033[1;6A
URxvt.keysym.Control-Down:        \033[1;5B
URxvt.keysym.Shift-Control-Down:  \033[1;6B
#+end_src

** System Applications
*** MPV -- video player
+ MPV
+ youtube-dl is used to watch youtube
+ streamlink is used to watch streams
+ mpv-mpris & playerctl allow playback control
  eg. ~streamlink huya.com/405945 source_bd --player mpv~
*** ROFI -- app drawer
#+begin_src conf :tangle ~/.config/rofi/config.rasi
configuration {
  display-run: " ";
  display-filebrowser: "  ";
  display-ssh     : " ";
  display-drun    : " ";
  display-window  : " ";
  drun-display-format: "{icon} {name}";
  font: "JetBrainsMono Nerd Font 24";
  modi: "drun,power-menu:rofi-power-menu,filebrowser";
  matching: "fuzzy";
  show-icons: true;
  kb-mode-next: "super+Tab";
  kb-mode-previous: "super+shift+Tab";
}

 ,* {
    bg-color: #242424E6;
    fg-color: #DEDEDE;
    tooltip-fg-color: #7E7E7E;
    selected-bg-color: #0860f2E6;
    selected-fg-color: #FFFFFF;
    insensitive-bg-color: #7E7E7E80;
    insensitive-fg-color: #7E7E7E;

    text-color          : @fg-color;
}
#window {
    location            : center;
    y-offset            : -200;
    width               : 1200;
    border-radius       : 8;
    background-color    : @bg-color;
}
#mainbox {
    spacing             : 0;
    background-color    : transparent;
}
#inputbar {
    font                : "JetBrainsMono Nerd Font 24";
    background-color    : transparent;
}
#prompt {
    text-color          : @tooltip-fg-color;
    font                : inherit;
    background-color    : inherit;
    margin              : 16 16 24 20;
}
#entry {
    font                : inherit;
    background-color    : inherit;
    placeholder         : "Search";
    placeholder-color   : @insensitive-fg-color;
    margin              : 11 0;
    text-color          : @tooltip-fg-color;
}
#case-indicator {
    margin              : 8 8 8 24;
    font                : inherit;
    background-color    : inherit;
}
#message {
    padding             : 0;
    border              : 2 0 0;
    border-color        : @insensitive-bg-color;
    background-color    : @insensitive-bg-color;
}
#textbox {
    padding             : 8 24;
    background-color    : inherit;
}
#listview {
    lines               : 10;
    columns             : 1;
    fixed-height        : false;
    spacing             : 0;
    scrollbar           : false;
    background-color    : transparent;
    border              : 2 0 0;
    border-color        : @insensitive-bg-color;
}
#element {
    padding             : 8 24;
    background-color    : transparent;
}
#element normal normal {
    background-color    : inherit;
    text-color          : inherit;
}
element.alternate.normal {
    background-color    : inherit;
    text-color          : inherit;
}
#element normal urgent {
}
#element normal active {
    text-color          : @selected-bg-color;
}
#element selected normal {
    background-color    : @selected-bg-color;
    text-color          : @selected-fg-color;
}
#element selected urgent {
}
#element selected active {
    background-color    : @selected-bg-color;
    text-color          : @selected-fg-color;
}
#element-icon {
    size                : 1em;
    margin              : 0 16 0 0;
}
element-text, element-icon {
    background-color: inherit;
    text-color:       inherit;
}
#+end_src

*** Polybar -- menu bar
#+begin_src conf :tangle ~/.config/polybar/config
[settings]
screenchange-reload = true

[global/wm]
margin-top = 0
margin-bottom = 0

[colors]
;; dark theme
background =            #fe282b33
background-alt =        #1f2024

foreground =            #FFFFFF
foreground-alt =        #FFFFFF
; foreground =            #c6c6c6
; foreground-alt =        #c9d9ff

;; other colors
red =                   #bf616a
green =                 #a3be8c
yellow =                #ebcb8b
blue =                  #5e81ac
magenta =               #b48ead
cyan =                  #88c0d0
white =                 #eceff4
gray =                  #4c566a
black =                 #2e3440

[bar/panel]
bottom = false
width = 100%
height = 42
offset-x = 0
offset-y = 0
fixed-center = true
enable-ipc = true

background = ${colors.background}
foreground = ${colors.foreground}

line-size = 2
line-color = #f00

border-size = 0
border-color = #00000000


padding-top = 5
padding-left = 4px
padding-right = 2px

module-margin-left = 1
module-margin-right = 1

font-0 = "Cantarell:size=18:weight=bold;2"
font-1 = "Font Awesome:size=16;2"
font-2 = "Material Icons:size=16;5"
font-3 = "JetBrainsMono Nerd Font:size=16;2"
font-4 = "SourceHanSansCN:size=16"


modules-left = exwm-workspace
modules-center = date
modules-right = temperature battery

; tray-position = none
tray-position = right
tray-padding = 2
tray-maxsize = 28

cursor-click = pointer
cursor-scroll = ns-resize

[module/exwm-workspace]
type = custom/ipc

; hook-0 = emacsclient -e "(exwm/polybar-exwm-workspace-chinese)" | sed -e 's/^"//' -e 's/"$//' | awk '{print "  "$1"  "}'
hook-0 = emacsclient -e "exwm-workspace-current-index" | sed -e 's/^"//' -e 's/"$//' | awk '{print "   "$1"   "}'
initial = 1
format-padding = 1
format-background = ${colors.background-alt}

[module/memory]
type = internal/memory

interval = 5

format =   <label>
format-foreground = ${colors.foreground}

label = %percentage_used%%

[module/cpu]
type = internal/cpu
interval = 2

format = ﬙  <label> <ramp-coreload>
click-left = emacsclient -e "(proced)"
label = %percentage:2%%
format-padding = 1
; Spacing between individual per-core ramps
ramp-coreload-spacing = 0
ramp-coreload-0 = ▁
ramp-coreload-1 = ▂
ramp-coreload-2 = ▃
ramp-coreload-3 = ▄
ramp-coreload-4 = ▅
ramp-coreload-5 = ▆
ramp-coreload-6 = ▇
ramp-coreload-7 = █

[module/temperature]
type = internal/temperature
thermal-zone = 0
interval = 0.5
base-temperature = 20
warn-temperature = 60

format = <ramp> <label>
format-foreground = ${colors.foreground}
format-padding = 1

format-warn = <label-warn>
format-warn-foreground = ${colors.red}
format-warn-padding = 1

label = "%temperature-c%"
label-warn = "%temperature-c%!"
label-warn-foreground = ${colors.red}

ramp-0 = 
ramp-0-foreground = ${colors.blue}
ramp-1 = 
ramp-1-foreground = ${colors.yellow}
ramp-2 = 
ramp-2-foreground = ${colors.red}

[module/date]
type = internal/date
interval = 5

date = "%a %b %e"
date-alt = "%A %B %d %Y"

time = %l:%M %p
time-alt = %H:%M:%S

format-prefix-foreground = ${colors.foreground-alt}

label = %date% - %time%
; label =  %date% -  %time%
format = <label>
format-padding = 3

[module/battery]
type = internal/battery
battery = BAT0
adapter = ADP1
full-at = 98
time-format = %-l:%M

label-charging = %percentage%%
format-charging = <animation-charging> <label-charging>
format-charging-prefix = " "
; format-charging-prefix-foreground = ${color.red}

label-discharging = %percentage%%
format-discharging = <ramp-capacity> <label-discharging>


format-full = <label-full>
format-full-prefix = " "
; format-full-foreground = ${colors.green}


ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 
ramp-capacity-5 = 
ramp-capacity-6 = 
ramp-capacity-7 = 
ramp-capacity-8 = 
ramp-capacity-9 = 
ramp-capacity-10 = 
ramp-capacity-foreground = ${colors.foreground}

animation-charging-0 = 
animation-charging-1 = 
animation-charging-2 = 
animation-charging-3 = 
animation-charging-4 = 
animation-charging-5 = 
animation-charging-6 = 
animation-charging-7 = 
animation-charging-8 = 
animation-charging-9 = 
animation-charging-10 = 
; animation-charging-foreground = ${colors.green}
animation-charging-framerate = 500

[module/pulseaudio]
type = internal/pulseaudio
sink = alsa_output.pci-0000_12_00.3.analog-stereo
use-ui-max = true

interval = 5

format-volume = <ramp-volume> <label-volume>

format-muted = <label-muted>
label-muted = 婢
label-muted-foreground = #666

ramp-volume-0 = 奄
ramp-volume-1 = 奔
ramp-volume-2 = 墳

click-right = pavucontrol

[module/powermenu]
type = custom/menu

format-spacing = 3
label-open = "    "
format-open-padding = 1
label-open-foreground = ${colors.cyan}
; label-close = 
; label-close-foreground = ${colors.red}
; label-separator = |
; label-separator-foreground = ${colors.foreground-alt}

; menu-0-0 = 
; menu-0-0-exec = menu-open-1
; menu-0-1 = 
; menu-0-1-exec = menu-open-2
; menu-0-2 = 
; menu-0-2-exec = menu-open-3

; menu-1-0 = 
; menu-1-0-exec = systemctl reboot

; menu-2-0 = 
; menu-2-0-exec = systemctl poweroff

; menu-3-0 = 
; menu-3-0-exec = systemctl suspend
#+end_src

*** Qutebrowser
#+begin_src python :tangle ~/.config/qutebrowser/config.py
config.load_autoconfig(True)
c.session.lazy_restore = True
c.qt.highdpi = True
c.auto_save.session = False
c.content.autoplay = False

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'file://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Enable PDFjs. Make sure that you installed PDFjs on your system.
c.content.pdfjs = True

# Enable smooth scrolling for web pages. Note smooth scrolling does not
# work with the `:scroll-px` command.
# Type: Bool
c.scrolling.smooth = True

# Scale pages and UI better for hidpi
# c.zoom.default = "200%"
# c.fonts.default_size = "20pt"
# c.fonts.hints = "bold 24pt monospace"

# Better default fonts
c.fonts.web.family.standard = "Bitstream Vera Sans"
c.fonts.web.family.serif = "Bitstream Vera Serif"
c.fonts.web.family.sans_serif = "Bitstream Vera Sans"
c.fonts.web.family.fixed = "Fira Mono"
# c.fonts.statusbar = "18pt Cantarell"

# Edit fields in Emacs with Ctrl+E
c.editor.command = ["emacsclient", "+{line}:{column}", "{file}"]

# webengine or webkit
c.backend = 'webengine'

c.tabs.background = True
# disable insert mode completely
c.input.insert_mode.auto_enter = False
c.input.insert_mode.auto_leave = False
c.input.insert_mode.plugins = False

# Forward unbound keys
c.input.forward_unbound_keys = "all"



ESC_BIND = 'clear-keychain ;; search ;; fullscreen --leave'

############################# emacs key-bindings###############################
import string

c.bindings.default['normal'] = {}
c.bindings.default['insert'] = {}

c.bindings.commands['insert'] = {
    '<ctrl-space>': 'mode-leave',
    '<escape>': 'mode-leave;;fake-key <Left>;;fake-key <Right>',
    '<ctrl-f>': 'fake-key <Shift-Right>',
    '<ctrl-b>': 'fake-key <Shift-Left>',
    '<ctrl-e>': 'fake-key <Shift-End>',
    '<ctrl-a>': 'fake-key <Shift-Home>',
    '<ctrl-p>': 'fake-key <Shift-Up>',
    '<ctrl-n>': 'fake-key <Shift-Down>',
    '<Return>': 'mode-leave',
    '<ctrl-w>': 'fake-key <Ctrl-x>;;message-info "cut to clipboard";;mode-leave',
    '<alt-w>': 'fake-key <Ctrl-c>;;message-info "copy to clipboard";;mode-leave',
    '<backspace>': 'fake-key <backspace>;;mode-leave',
    '<alt-x>': 'mode-leave;;set-cmd-text :',
    '<alt-o>': 'mode-leave;;tab-focus last',
    '<Tab>': 'fake-key <f1>'
}




for char in list(string.ascii_lowercase):
    c.bindings.commands['insert'].update({char: 'fake-key ' + char + ';;mode-leave'})

for CHAR in list(string.ascii_uppercase):
    c.bindings.commands['insert'].update({CHAR: 'fake-key ' + char + ';;mode-leave'})

for num in list(map(lambda x : str(x), range(0, 10))):
    c.bindings.commands['insert'].update({num: 'fake-key ' + num + ';;mode-leave'})

for symb in [',', '.', '/', '\'', ';', '[', ']', '\\',
             '!', '@','#','$','%','^','&','*','(',')','-','_', '=', '+', '`', '~',
             ':', '\"', '<', '>', '?','{', '}', '|']:
    c.bindings.commands['insert'].update({symb: 'insert-text ' + symb + ' ;;mode-leave'})


# Bindings
c.bindings.commands['normal'] = {
    # Navigation
    '<ctrl-]>': 'fake-key <Ctrl-Shift-Right>',
    '<ctrl-[>': 'fake-key <Ctrl-Shift-Left>',
    '<ctrl-v>': 'scroll-page 0 0.5',
    '<alt-v>': 'scroll-page 0 -0.5',

    '<alt-x>': 'set-cmd-text :',
    '<ctrl-x>b': 'set-cmd-text -s :buffer;;fake-key <Down><Down><Down>',
    # '<ctrl-x>r': 'config-cycle statusbar.hide',
    '<ctrl-x>1': 'tab-only;;message-info "cleared all other tabs"',
    '<ctrl-x><ctrl-c>': 'quit',

	# searching
    '<ctrl-s>': 'set-cmd-text /',
    '<super-f>': 'set-cmd-text /',
    '<ctrl-r>': 'set-cmd-text ?',

	# hinting
    '<ctrl-/>': 'hint all',

    # tabs
    '<ctrl-tab>': 'tab-next',
    '<ctrl-shift-tab>': 'tab-prev',
    '<super-1>': 'tab-focus 1',
    '<super-2>': 'tab-focus 2',
    '<super-3>': 'tab-focus 3',
    '<super-4>': 'tab-focus 4',
    '<super-5>': 'tab-focus 5',
    '<super-6>': 'tab-focus 6',
    '<super-7>': 'tab-focus 7',
    '<super-8>': 'tab-focus 8',
    '<super-9>': 'tab-focus -1',
    '<super-m>': 'tab-mute',
    '<super-t>': 'open -t',
    '<super-w>': 'tab-close',
    '<super-r>': 'reload -f',
    '<super-z>': 'undo',
    # '<super-Z>': 'undo --window',

    # open links
    '<ctrl-l>': 'set-cmd-text -s :open',
    '<alt-l>': 'set-cmd-text -s :open -t',

    # editing
    '<alt-Left>': 'back',
    '<alt-Right>': 'forward',
    # '<ctrl-/>': 'fake-key <Ctrl-z>',
    '<ctrl-shift-?>': 'fake-key <Ctrl-Shift-z>',
    '<ctrl-k>': 'fake-key <Shift-End>;;fake-key <Backspace>',
    '<ctrl-f>': 'fake-key <Right>',
    '<ctrl-b>': 'fake-key <Left>',
    '<alt-o>': 'tab-focus last',
    '<ctrl-a>': 'fake-key <Home>',
    '<super-a>': 'fake-key <Ctrl-a>',
    '<ctrl-e>': 'fake-key <End>',
    '<ctrl-n>': 'fake-key <Down>',
    '<ctrl-p>': 'fake-key <Up>',
    '<alt-f>': 'fake-key <Ctrl-Right>',
    '<alt-b>': 'fake-key <Ctrl-Left>',
    '<ctrl-d>': 'fake-key <Delete>',
    '<alt-d>': 'fake-key <Ctrl-Delete>',
    '<alt-backspace>': 'fake-key <Ctrl-Backspace>',
    '<ctrl-w>': 'fake-key <Ctrl-x>;;message-info "cut to clipboard"',
    '<alt-w>': 'fake-key <Ctrl-c>;;message-info "copy to clipboard"',
    # '<ctrl-y>': 'fake-key -g <ctrl-v>',
    # '<super-v>': 'insert-text {primary}',
    '<ctrl-y>': 'insert-text {clipboard}',

    '1': 'fake-key 1',
    '2': 'fake-key 2',
    '3': 'fake-key 3',
    '4': 'fake-key 4',
    '5': 'fake-key 5',
    '6': 'fake-key 6',
    '7': 'fake-key 7',
    '8': 'fake-key 8',
    '9': 'fake-key 9',
    '0': 'fake-key 0',

    # escape hatch
    '<ctrl-h>': 'set-cmd-text -s :help',
    '<Escape>': 'fake-key <Escape>'
}
config.bind('<Escape>', 'clear-keychain ;; search ;; fullscreen --leave')

c.bindings.commands['command'] = {
    '<ctrl-s>': 'search-next',
    '<super-f>': 'search-next',
    '<ctrl-r>': 'search-prev',

    '<ctrl-p>': 'completion-item-focus prev',
    '<ctrl-n>': 'completion-item-focus next',

    '<alt-p>': 'command-history-prev',
    '<alt-n>': 'command-history-next',

    '<alt-w>': 'fake-key -g <Ctrl-c>;;message-info "copy to clipboard"',
    '<ctrl-w>': 'fake-key -g <Ctrl-x>;;message-info "cut to clipboard"',
    '<ctrl-y>': 'fake-key -g <ctrl-v>',

    # escape hatch
    '<escape>': 'mode-leave',
}

c.bindings.commands['hint'] = {
    # escape hatch
    '<escape>': 'mode-leave',
}


c.bindings.commands['caret'] = {
    # escape hatch
    '<escape>': 'mode-leave',
    # '<ctrl-space>': 'toggle-selection',
    '<ctrl-a>': 'move-to-start-of-line',
    '<ctrl-e>': 'move-to-end-of-line'
}

# config.bind('<Tab>', 'fake-key <f1>')
config.bind('<Ctrl-x><Ctrl-l>', 'config-source')

# zooming
config.bind('<ctrl-+>', 'zoom-in')
config.bind('<ctrl-->', 'zoom-out')

c.tabs.show = 'multiple'
# c.statusbar.show = 'never'
c.url.searchengines["ddg"] = "https://duckduckgo.com/?q={}"
c.url.searchengines["default"] = c.url.searchengines["ddg"]

c.completion.height = '30%'

# Startseite
c.url.default_page = 'http://duckduckgo.com'
c.url.start_pages = 'http://duckduckgo.com'

# spawn mpv
config.bind('<ctrl-m>', 'hint links spawn --detach mpv {hint-url}')

# load theme
config.source('nord-qutebrowser.py')
#+end_src

*** Fusuma -- key events
#+begin_src conf :tangle ~/.config/fusuma/config.yml
# 3 finger drag
swipe:
  3:
    begin:
      command: xdotool mousedown 1
    update:
      command: xdotool mousemove_relative -- $move_x, $move_y
      threshold: 0.3
      interval: 0.01
      accel: 2
    end:
      command: xdotool mouseup 1
      #threshold: 3
      #interval: 3

# zoom
pinch:
  2:
    in:
      command: "xdotool keydown ctrl click 4 keyup ctrl" # Zoom in
      threshold: 1
      interval: 1
    out:
      command: "xdotool keydown ctrl click 5 keyup ctrl" # Zoom out
      threshold: 1
      interval: 1
#+end_src

*** Dunst -- notification
#+begin_src conf :tangle ~/.config/dunst/dunstrc
[global]
    ### Display ###

    # Which monitor should the notifications be displayed on.
    monitor = 0

    # Display notification on focused monitor.  Possible modes are:
    #   mouse: follow mouse pointer
    #   keyboard: follow window with keyboard focus
    #   none: don't follow anything
    #
    # "keyboard" needs a window manager that exports the
    # _NET_ACTIVE_WINDOW property.
    # This should be the case for almost all modern window managers.
    #
    # If this option is set to mouse or keyboard, the monitor option
    # will be ignored.
    follow = mouse

    # The geometry of the window:
    #   [{width}]x{height}[+/-{x}+/-{y}]
    # The geometry of the message window.
    # The height is measured in number of notifications everything else
    # in pixels.  If the width is omitted but the height is given
    # ("-geometry x2"), the message window expands over the whole screen
    # (dmenu-like).  If width is 0, the window expands to the longest
    # message displayed.  A positive x is measured from the left, a
    # negative from the right side of the screen.  Y is measured from
    # the top and down respectively.
    # The width can be negative.  In this case the actual width is the
    # screen width minus the width defined in within the geometry option.
    # geometry = "0x5-29+30"
    geometry = "0x50-24+44"

    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes

    # Shrink window if it's smaller than the width.  Will be ignored if
    # width is 0.
    shrink = no

    # The transparency of the window.  Range: [0; 100].
    # This option will only work if a compositing window manager is
    # present (e.g. xcompmgr, compiz, etc.).
    transparency = 20

    # The height of the entire notification.  If the height is smaller
    # than the font height and padding combined, it will be raised
    # to the font height and padding.
    notification_height = 0

    # Draw a line of "separator_height" pixel height between two
    # notifications.
    # Set to 0 to disable.
    separator_height = 4

    # Padding between text and separator.
    padding = 20

    # Horizontal padding.
    horizontal_padding = 20

    # Defines width in pixels of frame around the notification window.
    # Set to 0 to disable.
    frame_width = 0

    # Defines color of the frame around the notification window.
    frame_color = "#83a598"

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = frame

    # Sort messages by urgency.
    sort = yes

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    # Set to 0 to disable.
    # A client can set the 'transient' hint to bypass this. See the rules
    # section for how to disable this if necessary
    idle_threshold = 120

    ### Text ###

    font = JetBrains Mono Nerd Font 12

    # The spacing between lines.  If the height is smaller than the
    # font height, it will get raised to the font height.
    line_height = 4

    # Possible values are:
    # full: Allow a small subset of html markup in notifications:
    #        <b>bold</b>
    #        <i>italic</i>
    #        <s>strikethrough</s>
    #        <u>underline</u>
    #
    #        For a complete reference see
    #        <https://developer.gnome.org/pango/stable/pango-Markup.html>.
    #
    # strip: This setting is provided for compatibility with some broken
    #        clients that send markup even though it's not enabled on the
    #        server. Dunst will try to strip the markup but the parsing is
    #        simplistic so using this option outside of matching rules for
    #        specific applications *IS GREATLY DISCOURAGED*.
    #
    # no:    Disable markup parsing, incoming notifications will be treated as
    #        plain text. Dunst will not advertise that it has the body-markup
    #        capability if this is set as a global setting.
    #
    # It's important to note that markup inside the format option will be parsed
    # regardless of what this is set to.
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<b>%s</b>\n%b"

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = left

    # Vertical alignment of message text and icon.
    # Possible values are "top", "center" and "bottom".
    vertical_alignment = center

    # Show age of message if message is older than show_age_threshold
    # seconds.
    # Set to -1 to disable.
    show_age_threshold = 60

    # Split notifications into multiple lines if they don't fit into
    # geometry.
    word_wrap = yes

    # When word_wrap is set to no, specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

    ### Icons ###

    # Align icons left/right/off
    icon_position = left

    # Scale small icons up to this size, set to 0 to disable. Helpful
    # for e.g. small files or high-dpi screens. In case of conflict,
    # max_icon_size takes precedence over this.
    min_icon_size = 0

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 48

    # Paths to default icons.
    # icon_path = /usr/share/icons/Papirus-Dark/22x22/status/:/usr/share/icons/Papirus-Dark/22x22/devices/
    icon_path = /usr/share/icons/Papirus-Dark-Dark/22x22/status/:/usr/share/icons/Papirus-Dark/22x22/devices/:/usr/share/icons/Papirus-Dark/22x22/categories/:/usr/share/icons/Papirus-Dark/22x22/apps/:/usr/share/icons/Papirus-Dark/22x22/actions/


    ### History ###

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = yes

    # Maximum amount of notifications kept in history
    history_length = 20

    ### Misc/Advanced ###

    # dmenu path.
    dmenu = /usr/bin/dmenu -p dunst:

    # Browser for opening urls in context menu.
    browser = /usr/bin/qutebrowser

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    # Print a notification on startup.
    # This is mainly for error detection, since dbus (re-)starts dunst
    # automatically after a crash.
    startup_notification = false

    # Manage dunst's desire for talking
    # Can be one of the following values:
    #  crit: Critical features. Dunst aborts
    #  warn: Only non-fatal warnings
    #  mesg: Important Messages
    #  info: all unimportant stuff
    # debug: all less than unimportant stuff
    verbosity = mesg

    # Define the corner radius of the notification window
    # in pixel size. If the radius is 0, you have no rounded
    # corners.
    # The radius will be automatically lowered if it exceeds half of the
    # notification height to avoid clipping text and/or icons.
    corner_radius = 0

    # Ignore the dbus closeNotification message.
    # Useful to enforce the timeout set by dunst configuration. Without this
    # parameter, an application may close the notification sent before the
    # user defined timeout.
    ignore_dbusclose = false

    ### Legacy

    # Use the Xinerama extension instead of RandR for multi-monitor support.
    # This setting is provided for compatibility with older nVidia drivers that
    # do not support RandR and using it on systems that support RandR is highly
    # discouraged.
    #
    # By enabling this setting dunst will not be able to detect when a monitor
    # is connected or disconnected which might break follow mode if the screen
    # layout changes.
    force_xinerama = false

    ### mouse

    # Defines list of actions for each mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: If the notification has exactly one action, or one is marked as default,
    #              invoke it. If there are multiple and no default, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    # These values can be strung together for each mouse event, and
    # will be executed in sequence.
    mouse_left_click = close_current
    mouse_middle_click = do_action, close_current
    mouse_right_click = close_all

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    # If this setting is enabled the Xft.dpi value will be ignored and instead
    # dunst will attempt to calculate an appropriate dpi value for each monitor
    # using the resolution and physical size. This might be useful in setups
    # where there are multiple screens with very different dpi values.
    per_monitor_dpi = false

[shortcuts]

    # Shortcuts are specified as [modifier+][modifier+]...key
    # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
    # "mod3" and "mod4" (windows-key).
    # Xev might be helpful to find names for keys.

    # Close notification.
    # close = ctrl+space

    # Close all notifications.
    # close_all = ctrl+shift+space

    # Redisplay last message(s).
    # On the US keyboard layout "grave" is normally above TAB and left
    # of "1". Make sure this key actually exists on your keyboard layout,
    # e.g. check output of 'xmodmap -pke'
    # history = ctrl+grave

    # Context menu.
    # context = ctrl+shift+period

[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    background = "#212121"
    foreground = "#eeffff"
    timeout = 10
    # Icon for notifications with low urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_normal]
    background = "#212121"
    foreground = "#eeffff"
    timeout = 10
    # Icon for notifications with normal urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_critical]
    background = "#212121"
    foreground = "#cc241d"
    frame_color = "#cc241d"
    timeout = 0
    # Icon for notifications with critical urgency, uncomment to enable
    #icon = /path/to/icon

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    timeout
#    urgency
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg
#+end_src

*** okular -- reader
To show icons in okular, you need to install breeze-icons
#+begin_src conf :tangle ~/.local/share/kxmlgui5/okular/part.rc
<?xml version='1.0'?>
<!DOCTYPE gui SYSTEM 'kpartgui.dtd'>
<gui version="49" name="okular_part">
 <MenuBar>
  <Menu name="file">
   <text>&amp;File</text>
   <Action name="get_new_stuff" group="file_open"/>
   <Action name="import_ps" group="file_open"/>
   <Action name="file_save" group="file_save"/>
   <Action name="file_save_as" group="file_save"/>
   <Action name="file_reload" group="file_save"/>
   <Action name="file_print" group="file_print"/>
   <Action name="file_print_preview" group="file_print"/>
   <Action name="open_containing_folder" group="file_print"/>
   <Action name="properties" group="file_print"/>
   <Action name="embedded_files" group="file_print"/>
   <Action name="file_export_as" group="file_print"/>
   <Action name="file_share" group="file_print"/>
  </Menu>
  <Menu name="edit">
   <text>&amp;Edit</text>
   <Action name="edit_undo"/>
   <Action name="edit_redo"/>
   <Separator/>
   <Action name="edit_copy"/>
   <Separator/>
   <Action name="edit_select_all"/>
   <Action name="edit_select_all_current_page"/>
   <Separator/>
   <Action name="edit_find"/>
   <Action name="edit_find_next"/>
   <Action name="edit_find_prev"/>
  </Menu>
  <Menu name="view">
   <text>&amp;View</text>
   <Action name="presentation"/>
   <Separator/>
   <Action name="view_zoom_in"/>
   <Action name="view_zoom_out"/>
   <Action name="view_actual_size"/>
   <Action name="view_fit_to_width"/>
   <Action name="view_fit_to_page"/>
   <Action name="view_auto_fit"/>
   <Separator/>
   <Action name="view_render_mode"/>
   <Separator/>
   <Menu name="view_orientation">
    <text>&amp;Orientation</text>
    <Action name="view_orientation_rotate_ccw"/>
    <Action name="view_orientation_rotate_cw"/>
    <Action name="view_orientation_original"/>
   </Menu>
   <Action name="view_trim_mode"/>
   <Separator/>
   <Action name="view_toggle_forms"/>
  </Menu>
  <Menu name="go">
   <text>&amp;Go</text>
   <Action name="go_previous"/>
   <Action name="go_next"/>
   <Separator/>
   <Action name="first_page"/>
   <Action name="last_page"/>
   <Separator/>
   <Action name="go_document_back"/>
   <Action name="go_document_forward"/>
   <Separator/>
   <Action name="go_goto_page"/>
  </Menu>
  <Menu name="bookmarks">
   <text>&amp;Bookmarks</text>
   <Action name="bookmark_add"/>
   <Action name="rename_bookmark"/>
   <Action name="previous_bookmark"/>
   <Action name="next_bookmark"/>
   <Separator/>
   <ActionList name="bookmarks_currentdocument"/>
  </Menu>
  <Menu name="tools">
   <text>&amp;Tools</text>
   <Action name="mouse_drag"/>
   <Action name="mouse_zoom"/>
   <Action name="mouse_select"/>
   <Action name="mouse_textselect"/>
   <Action name="mouse_tableselect"/>
   <Action name="mouse_magnifier"/>
   <Separator/>
   <Action name="mouse_toggle_annotate"/>
   <Separator/>
   <Action name="add_digital_signature"/>
   <Separator/>
   <Action name="speak_document"/>
   <Action name="speak_current_page"/>
   <Action name="speak_stop_all"/>
   <Action name="speak_pause_resume"/>
  </Menu>
  <Menu name="settings">
   <text>&amp;Settings</text>
   <Action name="show_leftpanel" group="show_merge"/>
   <Action name="show_bottombar" group="show_merge"/>
   <Action name="options_configure_generators" group="configure_merge"/>
   <Action name="options_configure" group="configure_merge"/>
  </Menu>
  <Menu name="help">
   <text>&amp;Help</text>
   <Action name="help_about_backend" group="about_merge"/>
  </Menu>
 </MenuBar>
 <ToolBar name="mainToolBar">
  <text>Main Toolbar</text>
  <Action name="show_leftpanel"/>
  <Separator/>
  <Action name="mouse_drag"/>
  <Action name="mouse_selecttools"/>
  <Action name="annotation_favorites"/>
  <Spacer/>
  <Action name="page_number"/>
  <Spacer/>
  <Action name="view_zoom_out"/>
  <Action name="zoom_to"/>
  <Action name="view_zoom_in"/>
 </ToolBar>
 <ToolBar iconText="icononly" hidden="true" name="annotationToolBar" newline="true">
  <text>Annotation Toolbar</text>
  <Action name="annotation_highlighter"/>
  <Action name="annotation_underline"/>
  <Action name="annotation_squiggle"/>
  <Action name="annotation_strike_out"/>
  <Action name="annotation_typewriter"/>
  <Action name="annotation_inline_note"/>
  <Action name="annotation_popup_note"/>
  <Action name="annotation_freehand_line"/>
  <Action name="annotation_geometrical_shape"/>
  <Action name="annotation_stamp"/>
  <Separator/>
  <Action name="annotation_settings_width"/>
  <Action name="annotation_settings_color"/>
  <Action name="annotation_settings_inner_color"/>
  <Action name="annotation_settings_opacity"/>
  <Action name="annotation_settings_font"/>
  <Action name="annotation_settings_advanced"/>
  <Separator/>
  <Action name="annotation_bookmark"/>
  <Action name="annotation_settings_pin"/>
  <Spacer/>
  <Action name="hide_annotation_toolbar"/>
 </ToolBar>
 # keybindings
 <ActionProperties scheme="Default">
  <Action priority="0" name="show_leftpanel"/>
  <Action shortcut="Alt+W" name="edit_copy"/>
  <Action shortcut="Meta+Shift+Z" name="edit_redo"/>
  <Action shortcut="Meta+Z" name="edit_undo"/>
  <Action shortcut="Meta+R" name="file_reload"/>
  <Action shortcut="Meta+S" name="file_save"/>
  <Action shortcut="Meta+Shift+S" name="file_save_as"/>
  <Action name="go_next" shortcut="Ctrl+V"/>
  <Action name="go_previous" shortcut="Alt+V"/>
  <Action priority="0" name="mouse_drag"/>
  <Action priority="0" name="annotation_favorites"/>
  <Action priority="0" name="mouse_selecttools"/>
  <Action priority="0" name="view_zoom_out"/>
  <Action priority="0" name="view_zoom_in"/>
  <Action shortcut="Ctrl+S" name="edit_find"/>
 </ActionProperties>
</gui>
#+end_src

*** pass -- passward manager
This is unsecure as the passwd will stay on your clipboard
#+begin_src emacs-lisp :tangle "yes"
(defun zw/get-passwd (id)
  (interactive "MEnter your id: ")
  ;; (kill-new (shell-command-to-string (concat "pass " id)))
  (let ((proc (start-process-shell-command "pass" nil (concat "pass " id))))
    ;; async parse process' output
    (set-process-filter proc (lambda (proc line)
                               (progn
                                 (kill-new line)
                                 (message "pwd copied"))))))

;; not working now..
(defun zw/insert-passwd (id)
  (interactive "MEnter your id: ")
  (start-process-shell-command "pass" nil (concat "pass insert " id))
  ;; (call-process-shell-command "pass" nil (concat "pass -c " id))
  (message (concat id " pwd inserted!!"))
)
#+end_src

*** librime -- chinese input

+ user setting
#+begin_src conf :tangle ~/.config/rime/default.custom.yaml
patch:
  schema_list:
    - schema: luna_pinyin_simp
patch:
  "menu/page_size": 9

'speller/algebra':
    - erase/^xx$/                      # 第一行保留

    # 模糊音定義
    - derive/^([zcs])h/$1/             # zh, ch, sh => z, c, s
    - derive/^([zcs])([^h])/$1h$2/     # z, c, s => zh, ch, sh

    - derive/^n/l/                     # n => l
    - derive/^l/n/                     # l => n

    # 這兩組一般是單向的
    #- derive/^r/l/                     # r => l

    - derive/^ren/yin/                 # ren => yin, reng => ying
    #- derive/^r/y/                     # r => y

    # 下面 hu <=> f 這組寫法複雜一些，分情況討論
    #- derive/^hu$/fu/                  # hu => fu
    #- derive/^hong$/feng/              # hong => feng
    #- derive/^hu([in])$/fe$1/          # hui => fei, hun => fen
    #- derive/^hu([ao])/f$1/            # hua => fa, ...

    #- derive/^fu$/hu/                  # fu => hu
    #- derive/^feng$/hong/              # feng => hong
    #- derive/^fe([in])$/hu$1/          # fei => hui, fen => hun
    #- derive/^f([ao])/hu$1/            # fa => hua, ...

    # 模糊音定義先於簡拼定義，方可令簡拼支持以上模糊音
    - abbrev/^([a-z]).+$/$1/           # 簡拼（首字母）
    - abbrev/^([zcs]h).+$/$1/          # 簡拼（zh, ch, sh）

    # 自動糾正一些常見的按鍵錯誤
    - derive/([aeiou])ng$/$1gn/        # dagn => dang
    - derive/([dtngkhrzcs])o(u|ng)$/$1o/  # zho => zhong|zhou
    - derive/ong$/on/                  # zhonguo => zhong guo
    - derive/ao$/oa/                   # hoa => hao
    - derive/([iu])a(o|ng?)$/a$1$2/    # tain => tian

translator/dictionary: luna_pinyin.extended
#+end_src
+ luna pinyin
#+begin_src conf :tangle ~/.config/rime/luna_pinyin.custom.yaml
patch:
  switches:                   # 注意缩进
    - name: ascii_mode
      reset: 0                # reset 0 的作用是当从其他输入法切换到本输入法重设为指定状态
      states: [ 中文, 西文 ]   # 选择输入方案后通常需要立即输入中文，故重设 ascii_mode = 0
    - name: full_shape
      states: [ 半角, 全角 ]   # 而全／半角则可沿用之前方案的用法。
    - name: simplification
      reset: 1                # 增加这一行：默认启用「繁→簡」转换。
      states: [ 漢字, 汉字 ]
#+end_src
*** ibus-rime -- chinese input
+ Anaconda python would raise error about =gi= and =gtkx11= runing ~ibus-setup~, so you need to switch to system python
#+begin_src conf :tangle "no"
export PATH=/usr/bin:$PATH
#+end_src
+ modify env
#+begin_src emacs-lisp :tangle "no"
;; use ibus-rime for X11 apps
(setenv "GTK_IM_MODULE" "ibus")
(setenv "QT_IM_MODULE" "ibus")
(setenv "XMODIFIERS" "@im=ibus")
#+end_src
+ 转为简体
https://blog.csdn.net/chougu3652/article/details/100656237
+ qt光标不跟随 -- 这是因为我用xrandr调了dpi
*** picom -- screen compositor
#+begin_src conf :tangle  ~/.config/picom.conf
opacity-rule = [
  "90:class_g = 'URxvt' && focused",
  "40:class_g = 'URxvt' && !focused",
];

blur: {
      method = "dual_kawase";
      strength = 10;
      background = false;
      background-frame = false;
      background-fixed = false;
}
#+end_src

*** bcwc pcie -- macbook facetime camera
install from aur: ~yay -S bcwc-pcie-git~
Run depmod for kernel to be able to find and load it: ~sudo depmod~
Load kernel module: ~sudo modprobe facetimehd~

*** TODO libreoffice
** Fonts
*** noto-fonts-emoji -- emoji
this package is useful for displaying emoji in x windows
* Provide System Conf
#+begin_src emacs-lisp :tangle "yes"
(provide 'emacs-system)
#+end_src
