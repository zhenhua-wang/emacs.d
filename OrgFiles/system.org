#+title: System Configuration
#+author: Zhenhua Wang
#+STARTUP: overview
-----
* Arch Linux
** Core
#+begin_src sh
# yay
sudo pacman -S --needed git base-devel cmake inetutils
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
#+end_src

** Emacs
#+begin_src shell
# clone repo
git clone https://github.com/zhenhua-wang/emacs.d.git
mv emacs.d .emacs.d
mkdir ~/.fonts
cp ~/.emacs.d/fonts/* ~/.fonts && fc-cache -fv
# compile emacs
yay -S libxpm libtiff giflib aspell aspell-en
git clone git://git.sv.gnu.org/emacs.git
cd emacs
./autogen.sh
./configure --with-json --with-xinput2 --without-compress-install --with-cairo --with-x-toolkit=no
make
sudo make install
#+end_src

** Exwm
#+begin_src sh
# x11
yay -S sddm xorg-xrdb xorg-xrandr qt5-graphicaleffects qt5-svg qt5-quickcontrols2 sddm-theme-catppuccin-git
sudo systemctl enable sddm.service
# required
yay -S picom dunst network-manager-applet pasystray udiskie blueman feh brightnessctl alsa-utils playerctl fcitx5-rime fcitx5-im fcitx5-skin-adwaita-dark rofi rofi-calc flameshot
# optional
yay -S arc-gtk-theme papirus-icon-theme xcursor-breeze thunar tumbler ffmpegthumbnailer plank plank-theme-bigsur
# application dock
# dconf dump /net/launchpad/plank/docks/ > docks.ini
cat ~/.emacs.d/exwm/docks.ini | dconf load /net/launchpad/plank/docks/
#+end_src

** Gnome
*** install
#+begin_src sh
# core
yay -S gdm gnome-shell gnome-control-center gnome-keyring gnome-tweaks networkmanager xdg-desktop-portal-gnome xdg-user-dirs gst-plugins-good power-profiles-daemon switcheroo-control
sudo systemctl enable gdm.service -f
# extra
yay -S gnome-themes-extra gnome-browser-connector gnome-shell-extension-dash-to-dock gnome-shell-extension-blur-my-shell gnome-shell-extension-appindicator gnome-shell-extension-hide-universal-access gnome-shell-extension-caffeine gnome-shell-extension-vitals iio-sensor-proxy xcursor-breeze ibus-rime nautilus loupe gnome-calculator gnome-disk-utility baobab eyedropper networkmanager-openconnect
# keyd
yay -S keyd
sudo systemctl enable keyd && sudo systemctl start keyd
# usermod -aG keyd zhenhua
# keyd-application-mapper
# symbolic link rime
ln -s ~/.local/share/fcitx5/rime/ ~/.config/ibus/rime
# printing service
yay -S cups
sudo systemctl enable cups
#+end_src

*** Extensions
https://extensions.gnome.org/extension/1336/run-or-raise/
https://extensions.gnome.org/extension/4998/legacy-gtk3-theme-scheme-auto-switcher/
https://extensions.gnome.org/extension/5233/swap-finger-gestures-3-to-4/

*** tricks
**** firefox force wayland
Add ~MOZ_ENABLE_WAYLAND=1~ into ~/etc/environment~

**** Easily find out what is being set
1. Open a terminal window
2. Run the command:
3. ~dconf watch /~
4. Make your changes and see what the terminal shows:
5. set with ~gsettings set PATH KEY VALUE~

** Driver
#+begin_src sh
# touchpad
yay -S jq
curl -sS 'https://gitlab.freedesktop.org/api/v4/users/20572/gpg_keys/530' | jq '.key' | xargs echo -e | gpg --import -i -
yay -S libinput-three-finger-drag libinput-gestures
# dkms
yay -S linux-headers dkms rtl88x2bu-dkms-git nvidia-dkms
#+end_src

** Other Applications
#+begin_src shell
# service
sudo systemctl enable bluetooth.service
# statistics
yay -S r gcc-fortran pandoc texlive-core texlive-latexextra texlive-fontsrecommended texlive-binextra texlive-mathscience texlive-plaingeneric texlive-bibtexextra
# zsh
yay -S zsh && chsh -s $(which zsh)
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# config git
git config --global user.name "Zhenhua Wang"
git config --global user.email "wang_zhenhua1996@icloud.com"
git config --global credential.helper store
# essential desktop applications
yay -S firefox kitty htop neofetch obs-studio mpv yt-dlp streamlink file-roller foliate fragments impression warp
# laptop power management
yay -S tlp tlp-rdw
sudo systemctl enable tlp.service NetworkManager-dispatcher.service
sudo systemctl mask systemd-rfkill.service systemd-rfkill.socket
#+end_src

** Misc
*** Dell closing lid doesn't suspend
https://askubuntu.com/a/1030789
In =/etc/systemd/sleep.conf=
#+begin_src conf
[Sleep]
SuspendMode=
SuspendState=mem
#+end_src

*** Hibernation
#+begin_src shell
# create swapfile (12G)
dd if=/dev/zero of=/swapfile bs=1M count=12288 status=progress
chmod 0600 /swapfile
mkswap -U clear /swapfile
swapon /swapfile
## edit the fstab (/etc/fstab) configuration to add an entry for the swap file:
/swapfile none swap defaults 0 0
# use hibernator to add resume to kernel parameters
git clone https://github.com/Chrysostomus/hibernator.git
cd hibernator
sudo chmod +x hibernator
./hibernator
# update grub
yay -S update-grub
sudo update-grub
# enable suspend-then-hibernate
## edit /etc/systemd/logind.conf to add the following
HandleLidSwitch=suspend-then-hibernate
## edit HibernateDelaySec in /etc/systemd/sleep.conf
HibernateDelaySec=20min
## restart service
sudo systemctl restart systemd-logind.service
#+end_src

*** SSH
use ssh config file
#+begin_example
Host vm-server
    HostName 127.0.0.1
    User zhenhua
    Port 3022
#+end_example

- enable ssh on server
#+begin_example
sudo apt-get install openssh-server
sudo systemctl enable ssh
sudo systemctl start ssh
#+end_example

*** KDE
- install =plasma-meta=
- use =terminator=
**** hide titlebar when maximized
Add the following scripts in =~/.config/kwinrc=
#+begin_src sh
[Windows]
BorderlessMaximizedWindows=true
#+end_src

**** chinese input
1. enable Chinese locale
   - make =zh_CN.UTF-8 UTF-8= is in ~/etc/locale.gen~
   - run ~locale-gen~ in shell
2. install =noto-fonts-cjk=
3. add =input method panel= to KDE's panel
4. use =ibus= and add +ibus-libpinyin+ =ibus-rime=
   - to autostart and config ibus, add the following scripts to ~~/.config/plasma-workspace/env/~
#+begin_src sh
export LC_CTYPE=zh_CN.UTF-8     # this is need to enable ibus in emacs
export XMODIFIERS=@im=ibus
export GTK_IM_MODULE=ibus
export QT_IM_MODULE=ibus
ibus-daemon -drxR --panel=/usr/lib/kimpanel-ibus-panel
#+end_src

**** zoom
Since we set global scale to 200%, we need to set ~autoScale=false~ in ~/.config/zoomus.conf~ to ensure a correct scale for zoom.

*** Dual boot with windows
- Make sure you've installed ntfs-3g: ~yay -S ntfs-3g~
- Make sure you've installed os-prober: ~yay -S os-prober~
- Edit grub to use os-prober ~/etc/default/grub~ Find the last (or towards the bottom) line and make it say: ~GRUB_DISABLE_OS_PROBER=false~. Save and exit.
- Make sure you've mounted windows ~sudo mount -t ntfs /dev/nvme**** /mnt/windows~. (Put whatever partition windows is on where the =stars= are).
- ~(ignore)~ Make sure you've installed grub to the correct drive (pretty sure you have or it wouldn't boot Linux): sudo grub-install /dev/sd*
- Re run grub config: ~sudo grub-mkconfig -o /boot/grub/grub.cfg~

*** Firefox
1. Messed up font rendering in Firefox PDF viewer
   - disable "Allow websites to pick their own fonts" ( =browser.display.use_document_fonts= would be 0 in about:config ) https://www.reddit.com/r/firefox/comments/noxwav/comment/h041c28/?utm_source=share&utm_medium=web2x&context=3

2. Ctrl or Cmd + trackpad or mouse wheel
   - Set =mousewheel.with_meta.action= to 3 in about:config
https://connect.mozilla.org/t5/discussions/ctrl-or-cmd-trackpad-or-mouse-wheel-on-firefox-109-macos/m-p/23108

*** GPU and Tensorflow
Make sure that the nvidia driver is the proprietary NVIDIA driver (Manjaro can install this easily).
#+begin_src sh
# create python environment
conda create --name=tf_gpu python=3.9
conda activate tf_gpu
# GPU setup
# check if driver has installed
nvidia-smi
# install cuda and cudnn
conda install -c conda-forge cudatoolkit=11.2.2 cudnn=8.1.0
# reconnect terminal and reactivate tf_gpu
# configure the system paths
mkdir -p $CONDA_PREFIX/etc/conda/activate.d
echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CONDA_PREFIX/lib/' > $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh
# install tensorflow
pip install --upgrade pip
python3 -m pip install tensorflow==2.10
pip install "tensorflow-probability==0.18.0"
# verify install
python3 -c "import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))"
python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"
#+end_src

*** Auto Time Zone
#+begin_src sh
yay -S tzupdate
sudo tzupdate
#+end_src

*** NVIDIA screen tearing
#+begin_src sh
yay -S nvidia-settings
#+end_src

click on the ~Advanced~ button that is available on the ~X Server Display Configuration~ menu option. Select either ~Force Full Composition Pipeline~ and click on Apply. Save to X configuration file.

*** Repare fire system with Fsck
https://linuxize.com/post/fsck-command-in-linux/
#+begin_src sh
sudo fsck -p /dev/sda1
#+end_src

*** VPN
1. install ~networkmanager-openconnect~ for integration with gnome
2. Set Gateway
3. Set User Agent to ~AnyConnect Linux~

*** Nuphy Air75 Fn keys in win mode
~echo 'options hid_apple fnmode=0' | sudo tee -a /etc/modprobe.d/hid_apple.conf~

* MacOS
** Homebrew
#+begin_src shell
brew tap d12frosted/emacs-plus
brew install emacs-plus@29 --with-imagemagick --with-modern-sjrmanning-icon
#+end_src
