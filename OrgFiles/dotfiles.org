#+title: Dotfiles
#+author: Zhenhua Wang
#+STARTUP: overview
#+PROPERTY: header-args :mkdirp yes
-----
* XKB
Copy to ~/etc/X11/xorg.conf.d/00-keyboard.conf~
#+HEADER: :tangle "no"
#+begin_src emacs-lisp
Section "InputClass"
        Identifier "system-keyboard"
        MatchIsKeyboard "on"
        Option "XkbLayout" "us"
        Option "XkbOptions" "caps:ctrl_modifier,altwin:swap_lalt_lwin"
EndSection
#+end_src

* Xresources
For Xft.dpi, using integer multiples of 96 usually works best, e.g. 192 for 200% scaling.
#+HEADER: :tangle (let ((xresources (expand-file-name "Xresources" user-emacs-directory))) (if (file-exists-p xresources) "no" xresources))
#+begin_src conf
Xft.dpi:   192
#+end_src

* EXWM
#+HEADER: :tangle (if (eq system-type 'gnu/linux) "/sudo::/usr/share/xsessions/EXWM.desktop" "no")
#+begin_src conf
[Desktop Entry]
Name=EXWM
Comment=Emacs Window Manager
Exec=sh /home/zhenhua/.emacs.d/exwm/start-exwm.sh
TryExec=sh
Type=Application
X-LightDM-DesktopName=exwm
DesktopNames=exwm
#+end_src

* SDDM
#+HEADER: :tangle (if (eq system-type 'gnu/linux) "/sudo::/etc/sddm.conf" "no")
#+begin_src conf
[Theme]
Current=catppuccin-frappe
CursorTheme=Breeze
#+end_src

* Rprofile
#+HEADER: :tangle "~/.Rprofile"
#+begin_src conf
## don't show gui menu
options(menu.graphics=FALSE)
#+end_src

* Kitty
#+HEADER: :tangle (if (eq system-type 'gnu/linux) "~/.config/kitty/kitty.conf" "no")
#+begin_src conf
# default conf
font_family      Noto Sans Mono
bold_font        Noto Sans Mono Bold
italic_font      Noto Sans Mono Italic
bold_italic_font Noto Sans Mono Bold Italic
font_size        15.0
background       #272829
# keymap
map cmd+c       copy_to_clipboard
map cmd+v       paste_from_clipboard
#+end_src

* Dunst
#+HEADER: :tangle (if (eq system-type 'gnu/linux) "~/.config/dunst/dunstrc" "no")
#+begin_src conf
[global]
monitor = 0
follow = mouse
origin = top-right
offset = 10x48
corner_radius = 0
scale = 0
notification_limit = 0
progress_bar = true
progress_bar_height = 80
progress_bar_frame_width = 4
progress_bar_min_width = 300
progress_bar_max_width = 300
indicate_hidden = yes
transparency = 0
separator_height = 2
text_icon_padding = 0
frame_width = 4
gap_size = 0
separator_color = frame
sort = yes
idle_threshold = 120
font = Noto Sans Mono 12
line_height = 2
markup = full
format = %s\n%b
alignment = left
vertical_alignment = center
show_age_threshold = 60
ellipsize = middle
ignore_newline = no
stack_duplicates = true
hide_duplicate_count = false
show_indicators = yes
enable_recursive_icon_lookup = true
icon_position = left
min_icon_size = 24
max_icon_size = 48
sticky_history = yes
history_length = 20
browser = /usr/bin/xdg-open
always_run_script = true
mouse_left_click = do_action
mouse_middle_click = close_all
mouse_right_click = close_current
title = Dunst
class = Dunst

[urgency_low]
timeout = 2
background = "#1E2128"
foreground = "#ABB2BF"
frame_color = "#292d37"

[urgency_normal]
timeout = 5
background = "#1E2128"
foreground = "#ABB2BF"
frame_color = "#292d37"

[urgency_critical]
timeout = 0
background = "#1E2128"
foreground = "#E06B74"
frame_color = "#E06B74"
#+end_src

* Picom
#+HEADER: :tangle (if (eq system-type 'gnu/linux) "~/.config/picom.conf" "no")
#+begin_src conf
fading = false;
fade-in-step = 1;
fade-out-step = 0.03;
fade-exclude = ["class_g = 'Emacs'"];
# opacity-rule = [
#   "90:class_g = 'kitty' && focused",
#   "40:class_g = 'kitty' && !focused",
# ];
# blur: {
#       method = "dual_kawase";
#       strength = 10;
#       background = false;
#       background-frame = false;
#       background-fixed = false;
# }
# backend = "glx";
#+end_src

* Vterm
#+HEADER: :tangle "~/.cache/emacs/vterm_conf.sh"
#+begin_src sh
# vterm working directory tracking
function vterm_printf() {
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ]); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}
function vterm_prompt_end() {
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
}
setopt PROMPT_SUBST
export PROMPT=$PROMPT'%{$(vterm_prompt_end)%}'
#+end_src

* Fcitx5
** Config
#+HEADER: :tangle (if (eq system-type 'gnu/linux) "~/.config/fcitx5/config" "no")
#+begin_src conf
[Hotkey]
# Trigger Input Method
TriggerKeys=
# Enumerate when press trigger key repeatedly
EnumerateWithTriggerKeys=True
# Temporally switch between first and current Input Method
AltTriggerKeys=
# Enumerate Input Method Forward
EnumerateForwardKeys=
# Enumerate Input Method Backward
EnumerateBackwardKeys=
# Skip first input method while enumerating
EnumerateSkipFirst=False
# Enumerate Input Method Group Forward
EnumerateGroupForwardKeys=
# Enumerate Input Method Group Backward
EnumerateGroupBackwardKeys=
# Activate Input Method
ActivateKeys=
# Deactivate Input Method
DeactivateKeys=
# Default Previous page
PrevPage=
# Default Next page
NextPage=
# Default Previous Candidate
PrevCandidate=
# Default Next Candidate
NextCandidate=
# Toggle embedded preedit
TogglePreedit=

[Behavior]
# Active By Default
ActiveByDefault=False
# Share Input State
ShareInputState=Program
# Show preedit in application
PreeditEnabledByDefault=True
# Show Input Method Information when switch input method
ShowInputMethodInformation=True
# Show Input Method Information when changing focus
showInputMethodInformationWhenFocusIn=True
# Show compact input method information
CompactInputMethodInformation=True
# Show first input method information
ShowFirstInputMethodInformation=False
# Default page size
DefaultPageSize=9
# Override Xkb Option
OverrideXkbOption=False
# Custom Xkb Option
CustomXkbOption=
# Force Enabled Addons
EnabledAddons=
# Force Disabled Addons
DisabledAddons=
# Preload input method to be used by default
PreloadInputMethod=True
#+end_src

** Profile
#+HEADER: :tangle (if (eq system-type 'gnu/linux) "~/.config/fcitx5/profile" "no")
#+begin_src conf
[Groups/0]
# Group Name
Name=Default
# Layout
Default Layout=us
# Default Input Method
DefaultIM=rime

[Groups/0/Items/0]
# Name
Name=rime
# Layout
Layout=

[GroupOrder]
0=Default
#+end_src

** Theme
#+HEADER: :tangle (if (eq system-type 'gnu/linux) "~/.config/fcitx5/conf/classicui.conf" "no")
#+begin_src sh
# Vertical Candidate List
Vertical Candidate List=False
# Use mouse wheel to go to prev or next page
WheelForPaging=True
# Font
Font="Sans 12"
# Menu Font
MenuFont="Sans 12"
# Tray Font
TrayFont="Sans Bold 12"
# Tray Label Outline Color
TrayOutlineColor=#000000
# Tray Label Text Color
TrayTextColor=#ffffff
# Prefer Text Icon
PreferTextIcon=False
# Show Layout Name In Icon
ShowLayoutNameInIcon=True
# Use input method language to display text
UseInputMethodLanguageToDisplayText=True
# Theme
Theme=default
# Dark Theme
DarkTheme=default-dark
# Follow system light/dark color scheme
UseDarkTheme=True
# Use Per Screen DPI on X11
PerScreenDPI=True
# Force font DPI on Wayland
ForceWaylandDPI=0
# Enable fractional scale under Wayland
EnableFractionalScale=True
#+end_src

* Rime
** Main
#+HEADER: :tangle (if (eq system-type 'gnu/linux) "~/.local/share/fcitx5/rime/default.custom.yaml" "no")
#+begin_src conf
patch:
  schema_list:
    - schema: luna_pinyin
    - schema: terra_pinyin
  menu:
    page_size: 9
  switcher:
    caption: "〔方案选单〕"
    hotkeys:
      - Control+grave
      - F4
  ascii_composer:
    good_old_caps_lock: true
    switch_key:
      Shift_L: noop
      Shift_R: noop
      Control_L: noop
      Control_R: noop
      Caps_Lock: noop
      Eisu_toggle: noop
  key_binder:
    bindings:
      - {accept: Control+backslash, toggle: ascii_mode, when: always}
      - {accept: minus, send: Page_Up, when: paging}
      - {accept: equal, send: Page_Down, when: has_menu}
      - {accept: comma, send: Page_Up, when: paging}
      - {accept: period, send: Page_Down, when: has_menu}
      - {accept: bracketleft, send: Page_Up, when: paging}
      - {accept: bracketright, send: Page_Down, when: has_menu}
#+end_src

** Luna pinyin
#+HEADER: :tangle (if (eq system-type 'gnu/linux) "~/.local/share/fcitx5/rime/luna_pinyin.custom.yaml" "no")
#+begin_src conf
patch:
  switches:
    - name: ascii_mode
      reset: 1
      states: [ 中文, 西文 ]
    - name: full_shape
      states: [ 半角, 全角 ]
    - name: simplification
      reset: 1
      states: [ 漢字, 汉字 ]
    - name: ascii_punct
      states: [ 。，, ．， ]
#+end_src

