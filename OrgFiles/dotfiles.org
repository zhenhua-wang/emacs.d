#+title: Dotfiles
#+author: Zhenhua Wang
#+STARTUP: overview
#+PROPERTY: header-args :mkdirp yes
-----
* XKB
** Keyboard
Keyboard identifier can be found using ~xinput list~

#+HEADER: :tangle (zw/org-babel-tangle-linux "/sudo::/etc/X11/xorg.conf.d/00-keyboard.conf")
#+begin_src conf
Section "InputClass"
    Identifier "system-keyboard"
    MatchIsKeyboard "on"
    Option "XkbLayout" "us"
    Option "XkbOptions" "caps:ctrl_modifier,altwin:swap_lalt_lwin"
EndSection

Section "InputClass"
    Identifier "external-keyboard1"
    MatchProduct "BY Tech Air75"
    MatchIsKeyboard "on"
    Option "XkbLayout" "us"
    Option "XkbOptions" "caps:ctrl_modifier"
EndSection

Section "InputClass"
    Identifier "external-keyboard2"
    MatchProduct "Air75 BT5.0"
    MatchIsKeyboard "on"
    Option "XkbLayout" "us"
    Option "XkbOptions" "caps:ctrl_modifier"
EndSection
#+end_src

** Touchpad
#+HEADER: :tangle (zw/org-babel-tangle-linux "/sudo::/etc/X11/xorg.conf.d/30-touchpad.conf")
#+begin_src conf
Section "InputClass"
    Identifier "touchpad"
    Driver "libinput"
    Option "Tapping" "on"
    Option "TappingDrag" "false"
    Option "ClickMethod" "clickfinger"
EndSection
#+end_src

* Xresources
For Xft.dpi, using integer multiples of 96 usually works best, e.g. 192 for 200% scaling.
#+HEADER: :tangle (zw/org-babel-tangle-not-exist (expand-file-name "Xresources" user-emacs-directory))
#+begin_src conf
Xft.dpi:   192
#+end_src

* EXWM
#+HEADER: :tangle (zw/org-babel-tangle-linux "/sudo::/usr/share/xsessions/EXWM.desktop")
#+begin_src conf
[Desktop Entry]
Name=EXWM
Comment=Emacs Window Manager
Exec=sh /home/zhenhua/.emacs.d/exwm/start-exwm.sh
TryExec=sh
Type=Application
X-LightDM-DesktopName=exwm
DesktopNames=exwm
#+end_src

* SDDM
#+HEADER: :tangle (zw/org-babel-tangle-linux "/sudo::/etc/sddm.conf")
#+begin_src conf
[Theme]
Current=catppuccin-frappe
CursorTheme=Breeze
#+end_src

* Rprofile
#+HEADER: :tangle "~/.Rprofile"
#+begin_src conf
## don't show gui menu
options(menu.graphics=FALSE)
#+end_src

* Kitty
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/kitty/kitty.conf")
#+begin_src conf
# default conf
font_family      Noto Sans Mono
bold_font        Noto Sans Mono Bold
italic_font      Noto Sans Mono Italic
bold_italic_font Noto Sans Mono Bold Italic
font_size        15.0
confirm_os_window_close 1
# keymap
map cmd+c       copy_to_clipboard
map cmd+v       paste_from_clipboard
map ctrl+backspace send_text all \x17
map cmd+t new_tab
map cmd+w close_tab
map cmd+q close_os_window
map cmd+1 goto_tab 1
map cmd+2 goto_tab 2
map cmd+3 goto_tab 3
map cmd+4 goto_tab 4
map cmd+5 goto_tab 5
map cmd+6 goto_tab 6
map cmd+7 goto_tab 7
map cmd+8 goto_tab 8
map cmd+9 goto_tab 9
# tab bar
tab_separator ""
tab_title_template "{index}: {title}"
tab_bar_edge bottom
tab_bar_style powerline
tab_bar_min_tabs 1
active_tab_font_style bold
# theme
foreground #979eab
background #282c34
cursor #cccccc
color0 #282c34
color1 #e06c75
color2 #98c379
color3 #e5c07b
color4 #61afef
color5 #be5046
color6 #56b6c2
color7 #979eab
color8 #393e48
color9 #d19a66
color10 #56b6c2
color11 #e5c07b
color12 #61afef
color13 #be5046
color14 #56b6c2
color15 #abb2bf
selection_foreground #282c34
selection_background #979eab
#+end_src

* Dunst
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/dunst/dunstrc")
#+begin_src conf
[global]
# display
monitor = 0
follow = mouse
notification_limit = 0
indicate_hidden = yes
sort = yes
idle_threshold = 120
# geometry
width = 300
height = 150
origin = top-right
offset = 20x50
scale = 0
# frame
transparency = 0
separator_height = 1
padding = 8
horizontal_padding = 10
frame_width = 3
frame_color = "#8CAAEE"
separator_color= frame
corner_radius = 10
# text
font = Noto Sans Mono 13
line_height = 0
markup = full
format = "<b>%s</b>\n%b"
alignment = left
vertical_alignment = center
show_age_threshold = 60
ellipsize = middle
ignore_newline = no
stack_duplicates = true
hide_duplicate_count = false
show_indicators = yes
# icon
enable_recursive_icon_lookup = true
icon_theme = Papirus
icon_position = left
min_icon_size = 16
max_icon_size = 128
text_icon_padding = 0
# progress bar
progress_bar = true
progress_bar_height = 10
progress_bar_frame_width = 1
progress_bar_min_width = 150
progress_bar_max_width = 300
# history
sticky_history = yes
history_length = 20
# advanced
browser = /usr/bin/xdg-open
always_run_script = true
mouse_left_click = do_action
mouse_middle_click = close_all
mouse_right_click = close_current
title = Dunst
class = Dunst

[urgency_low]
background = "#303446"
foreground = "#C6D0F5"
timeout = 5

[urgency_normal]
background = "#303446"
foreground = "#C6D0F5"
timeout = 5

[urgency_critical]
background = "#303446"
foreground = "#C6D0F5"
frame_color = "#EF9F76"
timeout = 0
#+end_src

* Picom
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/picom.conf")
#+begin_src conf
# resolve screen tearing
vsync = true;
unredir-if-possible = false;
# fade
fading = true;
fade-in-step = 0.028;
fade-out-step = 0.03;
fade-exclude = ["class_g != 'Dunst'"];
# opacity
opacity-rule = ["90:class_g = 'Polybar'"];
# backend
backend = "glx"
glx-no-stencil = true;
glx-no-rebind-pixmap = true;
# blur: need to set "pseudo-transparency = false" in polybar
blur-method = "dual_kawase";
blur-strength = 12;
blur-background-exclude = ["class_g != 'Polybar' && class_g != 'Rofi'"];
# rounded
corner-radius = 12;
rounded-corners-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "class_g = 'Emacs'"
];
# shadow
shadow = true;
shadow-radius = 10;
shadow-offset-x = -10;
shadow-offset-y = -10;
shadow-exclude = [
  "class_g = 'Plank'",
  "class_g = 'Dunst'"
];
#+end_src

* Vterm
#+HEADER: :tangle "~/.cache/emacs/vterm_conf.sh"
#+begin_src sh
# vterm working directory tracking
function vterm_printf() {
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ]); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}
function vterm_prompt_end() {
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
}
setopt PROMPT_SUBST
export PROMPT=$PROMPT'%{$(vterm_prompt_end)%}'
#+end_src

* Fcitx5
** Config
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/fcitx5/config")
#+begin_src conf
[Hotkey]
# Trigger Input Method
TriggerKeys=
# Enumerate when press trigger key repeatedly
EnumerateWithTriggerKeys=True
# Temporally switch between first and current Input Method
AltTriggerKeys=
# Enumerate Input Method Forward
EnumerateForwardKeys=
# Enumerate Input Method Backward
EnumerateBackwardKeys=
# Skip first input method while enumerating
EnumerateSkipFirst=False
# Enumerate Input Method Group Forward
EnumerateGroupForwardKeys=
# Enumerate Input Method Group Backward
EnumerateGroupBackwardKeys=
# Activate Input Method
ActivateKeys=
# Deactivate Input Method
DeactivateKeys=
# Default Previous page
PrevPage=
# Default Next page
NextPage=
# Default Previous Candidate
PrevCandidate=
# Default Next Candidate
NextCandidate=
# Toggle embedded preedit
TogglePreedit=

[Behavior]
# Active By Default
ActiveByDefault=False
# Share Input State
ShareInputState=Program
# Show preedit in application
PreeditEnabledByDefault=True
# Show Input Method Information when switch input method
ShowInputMethodInformation=True
# Show Input Method Information when changing focus
showInputMethodInformationWhenFocusIn=True
# Show compact input method information
CompactInputMethodInformation=True
# Show first input method information
ShowFirstInputMethodInformation=False
# Default page size
DefaultPageSize=9
# Override Xkb Option
OverrideXkbOption=False
# Custom Xkb Option
CustomXkbOption=
# Force Enabled Addons
EnabledAddons=
# Force Disabled Addons
DisabledAddons=
# Preload input method to be used by default
PreloadInputMethod=True
#+end_src

** Profile
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/fcitx5/profile")
#+begin_src conf
[Groups/0]
# Group Name
Name=Default
# Layout
Default Layout=us
# Default Input Method
DefaultIM=rime

[Groups/0/Items/0]
# Name
Name=rime
# Layout
Layout=

[GroupOrder]
0=Default
#+end_src

** Theme
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/fcitx5/conf/classicui.conf")
#+begin_src sh
# Vertical Candidate List
Vertical Candidate List=False
# Use mouse wheel to go to prev or next page
WheelForPaging=True
# Font
Font="Sans 13"
# Menu Font
MenuFont="Sans 13"
# Tray Font
TrayFont="Sans Bold 13"
# Tray Label Outline Color
TrayOutlineColor=#000000
# Tray Label Text Color
TrayTextColor=#ffffff
# Prefer Text Icon
PreferTextIcon=False
# Show Layout Name In Icon
ShowLayoutNameInIcon=True
# Use input method language to display text
UseInputMethodLanguageToDisplayText=True
# Theme
Theme=adwaita-dark
# Dark Theme
DarkTheme=default-dark
# Follow system light/dark color scheme
UseDarkTheme=True
# Use Per Screen DPI on X11
PerScreenDPI=True
# Force font DPI on Wayland
ForceWaylandDPI=0
# Enable fractional scale under Wayland
EnableFractionalScale=True
#+end_src

* Rime
** Main
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.local/share/fcitx5/rime/default.custom.yaml")
#+begin_src conf
patch:
  schema_list:
    - schema: luna_pinyin
    - schema: terra_pinyin
  menu:
    page_size: 9
  switcher:
    caption: "〔方案选单〕"
    hotkeys:
      - Control+grave
      - F4
  ascii_composer:
    good_old_caps_lock: true
    switch_key:
      Shift_L: noop
      Shift_R: noop
      Control_L: noop
      Control_R: noop
      Caps_Lock: noop
      Eisu_toggle: noop
  key_binder:
    bindings:
      - {accept: Control+backslash, toggle: ascii_mode, when: always}
      - {accept: minus, send: Page_Up, when: paging}
      - {accept: equal, send: Page_Down, when: has_menu}
      - {accept: comma, send: Page_Up, when: paging}
      - {accept: period, send: Page_Down, when: has_menu}
      - {accept: bracketleft, send: Page_Up, when: paging}
      - {accept: bracketright, send: Page_Down, when: has_menu}
#+end_src

** Luna pinyin
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.local/share/fcitx5/rime/luna_pinyin.custom.yaml")
#+begin_src conf
patch:
  switches:
    - name: ascii_mode
      reset: 1
      states: [ 中文, 西文 ]
    - name: full_shape
      states: [ 半角, 全角 ]
    - name: simplification
      reset: 1
      states: [ 漢字, 汉字 ]
    - name: ascii_punct
      states: [ 。，, ．， ]
#+end_src

* Rofi
** Common
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/rofi/common.rasi")
#+begin_src conf
configuration {
    font: "Noto Sans Mono 12";
}

,* {
    /* Colors */
    background:     #1E2127FF;
    background-alt: #282B31FF;
    foreground:     #FFFFFFFF;
    selected:       #61AFEFFF;
    active:         #98C379FF;
    urgent:         #E06C75FF;
    /* Gradients */
    gradient-1:     linear-gradient(to right, #282c34, #4a4e69);
}
#+end_src

** Launcher
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/rofi/config.rasi")
#+begin_src conf
configuration {
  matching: "fuzzy";
  show-icons: true;
  modi: "combi,calc";
  display-combi: "";
  display-calc: "󰪚";
  combi-modi: "window,drun";
  combi-hide-mode-prefix: true;
  drun-display-format: "{name}";
  window-format: "{w} · {c} · {t}";
  kb-mode-next: "Super+space";
}

/*****----- Global Properties -----*****/
@import                          "common.rasi"

,* {
    border-colour:               var(selected);
    handle-colour:               var(selected);
    background-colour:           var(background);
    foreground-colour:           var(foreground);
    alternate-background:        var(background-alt);
    normal-background:           var(background);
    normal-foreground:           var(foreground);
    urgent-background:           var(urgent);
    urgent-foreground:           var(background);
    active-background:           var(active);
    active-foreground:           var(background);
    selected-normal-background:  var(selected);
    selected-normal-foreground:  var(background);
    selected-urgent-background:  var(active);
    selected-urgent-foreground:  var(background);
    selected-active-background:  var(urgent);
    selected-active-foreground:  var(background);
    alternate-normal-background: var(background);
    alternate-normal-foreground: var(foreground);
    alternate-urgent-background: var(urgent);
    alternate-urgent-foreground: var(background);
    alternate-active-background: var(active);
    alternate-active-foreground: var(background);
}

/*****----- Main Window -----*****/
window {
    /* properties for window widget */
    transparency:                "real";
    location:                    center;
    anchor:                      center;
    fullscreen:                  false;
    x-offset:                    0px;
    y-offset:                    0px;
    /* properties for all widgets */
    enabled:                     true;
    margin:                      0px;
    padding:                     0px;
    border:                      0px solid;
    border-radius:               10px;
    border-color:                @border-colour;
    cursor:                      "default";
    /* Backgroud Colors */
    background-color:            @background-colour;
}

/*****----- Main Box -----*****/
mainbox {
    enabled:                     true;
    spacing:                     0px;
    margin:                      0px;
    padding:                     20px;
    border:                      0px solid;
    border-radius:               0px 0px 0px 0px;
    border-color:                @border-colour;
    background-color:            transparent;
    children:                    [ "inputbar", "message", "listview" ];
}

/*****----- Inputbar -----*****/
inputbar {
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px 0px 10px 0px;
    padding:                     5px 10px;
    border:                      0px solid;
    border-radius:               10px;
    border-color:                @border-colour;
    background-color:            @alternate-background;
    text-color:                  @foreground-colour;
    children:                    [ "textbox-prompt-colon", "entry", "mode-switcher" ];
}
prompt {
    enabled:                     true;
    background-color:            inherit;
    text-color:                  inherit;
}
textbox-prompt-colon {
    enabled:                     false;
    padding:                     5px 0px;
    expand:                      false;
    str:                         "";
    background-color:            inherit;
    text-color:                  inherit;
}
entry {
    enabled:                     true;
    padding:                     5px 5px;
    background-color:            inherit;
    text-color:                  inherit;
    cursor:                      text;
    placeholder:                 "Search...";
    placeholder-color:           inherit;
}
num-filtered-rows {
    enabled:                     true;
    expand:                      false;
    background-color:            inherit;
    text-color:                  inherit;
}
textbox-num-sep {
    enabled:                     true;
    expand:                      false;
    str:                         "/";
    background-color:            inherit;
    text-color:                  inherit;
}
num-rows {
    enabled:                     true;
    expand:                      false;
    background-color:            inherit;
    text-color:                  inherit;
}
case-indicator {
    enabled:                     true;
    background-color:            inherit;
    text-color:                  inherit;
}

/*****----- Listview -----*****/
listview {
    enabled:                     true;
    columns:                     1;
    lines:                       10;
    cycle:                       true;
    dynamic:                     true;
    scrollbar:                   false;
    layout:                      vertical;
    reverse:                     false;
    fixed-height:                true;
    fixed-columns:               true;
    spacing:                     5px;
    margin:                      0px;
    padding:                     10px;
    border:                      2px 2px 2px 2px ;
    border-radius:               2px 2px 10px 10px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
    cursor:                      "default";
}
scrollbar {
    handle-width:                5px ;
    handle-color:                @handle-colour;
    border-radius:               10px;
    background-color:            @alternate-background;
}

/*****----- Elements -----*****/
element {
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px;
    padding:                     6px;
    border:                      0px solid;
    border-radius:               6px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
    cursor:                      pointer;
}
element normal.normal {
    background-color:            var(normal-background);
    text-color:                  var(normal-foreground);
}
element normal.urgent {
    background-color:            var(urgent-background);
    text-color:                  var(urgent-foreground);
}
element normal.active {
    background-color:            var(active-background);
    text-color:                  var(active-foreground);
}
element selected.normal {
    background-color:            var(selected-normal-background);
    text-color:                  var(selected-normal-foreground);
}
element selected.urgent {
    background-color:            var(selected-urgent-background);
    text-color:                  var(selected-urgent-foreground);
}
element selected.active {
    background-color:            var(selected-active-background);
    text-color:                  var(selected-active-foreground);
}
element alternate.normal {
    background-color:            var(alternate-normal-background);
    text-color:                  var(alternate-normal-foreground);
}
element alternate.urgent {
    background-color:            var(alternate-urgent-background);
    text-color:                  var(alternate-urgent-foreground);
}
element alternate.active {
    background-color:            var(alternate-active-background);
    text-color:                  var(alternate-active-foreground);
}
element-icon {
    background-color:            transparent;
    text-color:                  inherit;
    cursor:                      inherit;
}
element-text {
    background-color:            transparent;
    text-color:                  inherit;
    highlight:                   inherit;
    cursor:                      inherit;
    vertical-align:              0.5;
    horizontal-align:            0.0;
}

/*****----- Mode Switcher -----*****/
mode-switcher{
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px;
    padding:                     0px;
    border:                      0px solid;
    border-radius:               0px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
}
button {
    padding:                     5px 10px;
    border:                      0px solid;
    border-radius:               10px;
    border-color:                @border-colour;
    background-color:            @alternate-background;
    text-color:                  inherit;
    cursor:                      pointer;
}
button selected {
    background-color:            var(selected-normal-background);
    text-color:                  var(selected-normal-foreground);
}

/*****----- Message -----*****/
message {
    enabled:                     true;
    margin:                      0px 0px 10px 0px;
    padding:                     0px;
    border:                      0px solid;
    border-radius:               0px 0px 0px 0px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
}
textbox {
    padding:                     10px;
    border:                      0px solid;
    border-radius:               10px;
    border-color:                @border-colour;
    background-color:            @alternate-background;
    text-color:                  @foreground-colour;
    vertical-align:              0.5;
    horizontal-align:            0.0;
    highlight:                   none;
    placeholder-color:           @foreground-colour;
    blink:                       true;
    markup:                      true;
}
error-message {
    padding:                     10px;
    border:                      2px solid;
    border-radius:               10px;
    border-color:                @border-colour;
    background-color:            @background-colour;
    text-color:                  @foreground-colour;
}
#+end_src

** Powermenu
*** Shell
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/rofi/powermenu.sh")
#+HEADER: :shebang "#!/bin/bash"
#+begin_src sh
# Current Theme
dir="$HOME/.config/rofi"
theme='powermenu'

# CMDs
uptime="`uptime -p | sed -e 's/up //g'`"
host=`hostname`

# Options
shutdown='󰐥'
reboot='󰑙'
lock=''
suspend=''
logout='󰍃'

# Rofi CMD
rofi_cmd() {
    rofi -dmenu \
	 -p "Later ${USER}" \
	 -mesg "Uptime: $uptime" \
	 -theme ${dir}/${theme}.rasi
}

# Pass variables to rofi dmenu
run_rofi() {
    echo -e "$lock\n$suspend\n$logout\n$reboot\n$shutdown" | rofi_cmd
}

# Execute Command
run_cmd() {
    if [[ $1 == '--shutdown' ]]; then
        emacsclient -e "(recentf-save-list)"
        emacsclient -e "(save-some-buffers)"
	systemctl poweroff
    elif [[ $1 == '--reboot' ]]; then
        emacsclient -e "(recentf-save-list)"
        emacsclient -e "(save-some-buffers)"
	systemctl reboot
    elif [[ $1 == '--suspend' ]]; then
	mpc -q pause
	amixer set Master mute
	systemctl suspend
    elif [[ $1 == '--logout' ]]; then
        emacsclient -e "(recentf-save-list)"
        emacsclient -e "(save-some-buffers)"
	killall emacs
    fi
}

# Actions
chosen="$(run_rofi)"
case ${chosen} in
    $shutdown)
	run_cmd --shutdown
        ;;
    $reboot)
	run_cmd --reboot
        ;;
    $lock)
	if [[ -x '/usr/bin/betterlockscreen' ]]; then
	    betterlockscreen -l
	elif [[ -x '/usr/bin/i3lock' ]]; then
	    i3lock
	fi
        ;;
    $suspend)
	run_cmd --suspend
        ;;
    $logout)
	run_cmd --logout
        ;;
esac
#+end_src

*** Style
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/rofi/powermenu.rasi")
#+begin_src conf
/*****----- Global Properties -----*****/
@import                          "common.rasi"

/*****----- Configuration -----*****/
configuration {
    show-icons:                 false;
}

/*****----- Global Properties -----*****/
,* {
    /* Resolution : 1920x1080 */
    mainbox-spacing:             50px;
    mainbox-margin:              50px;
    message-margin:              0px 300px;
    message-padding:             12px;
    message-border-radius:       12px;
    listview-spacing:            25px;
    element-padding:             35px 0px;
    element-border-radius:       60px;

    prompt-font:                 "Symbols Nerd Font Bold Italic 48";
    textbox-font:                "Symbols Nerd Font 20";
    element-text-font:           "Symbols Nerd Font 48";

    background-window:           black/40%;
    background-normal:           white/5%;
    background-selected:         white/15%;
    foreground-normal:           white;
    foreground-selected:         white;
}

/*****----- Main Window -----*****/
window {
    transparency:                "real";
    location:                    center;
    anchor:                      center;
    fullscreen:                  false;
    width:                       1300px;
    border-radius:               0px;
    cursor:                      "default";
    background-color:            var(background-window);
}

/*****----- Main Box -----*****/
mainbox {
    enabled:                     true;
    spacing:                     var(mainbox-spacing);
    margin:                      var(mainbox-margin);
    background-color:            transparent;
    children:                    [ "dummy", "inputbar", "listview", "message", "dummy" ];
}

/*****----- Inputbar -----*****/
inputbar {
    enabled:                     true;
    background-color:            transparent;
    children:                    [ "dummy", "prompt", "dummy"];
}

dummy {
    background-color:            transparent;
}

prompt {
    enabled:                     true;
    font:                        var(prompt-font);
    background-color:            transparent;
    text-color:                  var(foreground-normal);
}

/*****----- Message -----*****/
message {
    enabled:                     true;
    margin:                      var(message-margin);
    padding:                     var(message-padding);
    border-radius:               var(message-border-radius);
    background-color:            var(background-normal);
    text-color:                  var(foreground-normal);
}
textbox {
    font:                        var(textbox-font);
    background-color:            transparent;
    text-color:                  inherit;
    vertical-align:              0.5;
    horizontal-align:            0.5;
}

/*****----- Listview -----*****/
listview {
    enabled:                     true;
    expand:                      false;
    columns:                     5;
    lines:                       1;
    cycle:                       true;
    dynamic:                     true;
    scrollbar:                   false;
    layout:                      vertical;
    reverse:                     false;
    fixed-height:                true;
    fixed-columns:               true;
    spacing:                     var(listview-spacing);
    background-color:            transparent;
    cursor:                      "default";
}

/*****----- Elements -----*****/
element {
    enabled:                     true;
    padding:                     var(element-padding);
    border-radius:               var(element-border-radius);
    background-color:            var(background-normal);
    text-color:                  var(foreground-normal);
    cursor:                      pointer;
}
element-text {
    font:                        var(element-text-font);
    background-color:            transparent;
    text-color:                  inherit;
    cursor:                      inherit;
    vertical-align:              0.5;
    horizontal-align:            0.5;
}
element selected.normal {
    background-color:            var(background-selected);
    text-color:                  var(foreground-selected);
}
#+end_src

* GTK3
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/gtk-3.0/settings.ini")
#+begin_src conf
[Settings]
gtk-theme-name=Arc-Dark
gtk-icon-theme-name=Papirus-Dark
gtk-font-name=Cantarell 11
gtk-cursor-theme-name=Breeze
gtk-cursor-theme-size=0
gtk-toolbar-style=GTK_TOOLBAR_BOTH
gtk-toolbar-icon-size=GTK_ICON_SIZE_LARGE_TOOLBAR
gtk-button-images=1
gtk-menu-images=1
gtk-enable-event-sounds=1
gtk-enable-input-feedback-sounds=1
gtk-xft-antialias=1
gtk-xft-hinting=1
gtk-xft-hintstyle=hintfull
#+end_src

* Polybar
#+HEADER: :tangle (zw/org-babel-tangle-linux "~/.config/polybar/config.ini")
#+begin_src conf
[settings]
screenchange-reload = true
pseudo-transparency = true

[colors]
background = #282A2E
background-alt = #373B41
foreground = #C5C8C6
primary = #F0C674
green = #8ABEB7
red = #A54242

[bar/panel]
width = 100%
height = 20pt
line-size = 3pt
radius = 0
border-size = 0pt
# need to set pseudo-transparency = true
border-color = #00000000
dpi = ${xrdb:Xft.dpi}
cursor-click = pointer
cursor-scroll = ns-resize
enable-ipc = true
font-0 = monospace;2
font-1 = monospace:weight=bold;2
font-2 = Symbols Nerd Font Mono;2
font-3 = NotoEmoji:scale=10;2
font-4 = NotoSansMonoCJKsc;2
background = ${colors.background}
foreground = ${colors.foreground}
padding-left = 0
padding-right = 1
separator = " "

modules-left = exwm-workspace emacs-buffer-name
modules-right = powermenu temperature date battery

[module/exwm-workspace]
type = custom/ipc
hook-0 = emacsclient -e "exwm-workspace-current-index" | awk '{print " "$1" "}'
initial = 1
format-background = ${colors.background-alt}
format = "<output>"
format-font = 2

[module/emacs-buffer-name]
type = custom/ipc
hook-0 = emacsclient -e "(zw/exwm-polybar-buffer-name)" | tr -d '"'
initial = 1
format = "<output>"

[module/date]
type = internal/date
interval = 1
date = %b %d %a %H:%M:%S
label = %date%

[module/battery]
type = internal/battery
battery = ${env:EXWM_BAR_BATTERY}
adapter = ${env:EXWM_BAR_ADAPTER}
full-at = 100
low-at = 30
# full
label-full = "100%"
label-full-font = 2
format-full = <label-full>
# low
label-low = " %percentage_raw%%"
label-low-font = 2
label-low-foreground = ${colors.red}
format-low = <label-low>
# discharging
label-discharging = " %percentage_raw%%"
label-discharging-font = 2
format-discharging = <label-discharging>
# charging
label-charging = "+%percentage_raw%%"
label-charging-font = 2
label-charging-foreground = ${colors.green}
format-charging = <label-charging>

[module/temperature]
type = internal/temperature
interval = 1
thermal-zone = ${env:EXWM_BAR_TEMP}
label = "%temperature-c%"

[module/powermenu]
type = custom/text
content = ""
click-left = ~/.config/rofi/powermenu.sh
#+end_src

* Local variables
Add the following expressions to ~safe-local-eval-forms~.
# local variables:
# eval: (defun zw/org-babel-tangle-linux (path) (if (eq system-type 'gnu/linux) path "no"))
# eval: (defun zw/org-babel-tangle-not-exist (path) (if (file-exists-p path) "no" path))
# end:
